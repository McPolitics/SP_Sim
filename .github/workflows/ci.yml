name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: write
  deployments: write
  pages: write

env:
  NODE_VERSION: '22.x'

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run unit tests
        run: npm run test

      - name: Generate test coverage
        run: npm run test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production
          VITE_BUILD_MODE: production

      - name: Debug dist contents
        run: |
          echo "Checking dist/ directory before uploading..."
          ls -la dist
          find dist -type f

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  deploy:
    needs: lint-test-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Verify downloaded dist
        run: |
          echo "Verifying downloaded dist/"
          ls -la dist
          find dist -type f

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          publish_branch: gh-pages
          commit_message: 'üöÄ Deploy production build from commit ${{ github.sha }}'

  deploy-dev:
    needs: lint-test-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Verify downloaded dist (dev)
        run: |
          echo "Verifying dev dist/"
          ls -la dist
          find dist -type f

      - name: Deploy development build to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          publish_branch: gh-pages-dev
          commit_message: 'üß™ Deploy dev build from commit ${{ github.sha }}'

  pr-preview:
    needs: lint-test-build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Deploy PR Preview
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          destination_dir: pr-${{ github.event.number }}
          publish_branch: gh-pages-pr
          commit_message: 'üîç Deploy preview for PR #${{ github.event.number }}'

      - name: Comment PR with Preview Link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const url = `https://mcpolitics.github.io/SP_Sim/pr-${prNumber}`;
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Preview deployment ready!**\n\nüîó [View Preview Here](${url})\n\n*Automatically updates with each commit.*`
            });

  cleanup-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages-pr
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove PR preview
        run: |
          rm -rf pr-${{ github.event.number }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Remove preview for PR #${{ github.event.number }}" || exit 0
          git push
