{"version":3,"file":"main-legacy-0XW3gKMc.js","sources":["../../src/ui/components/Navigation.js","../../src/ui/components/Modal.js","../../src/ui/components/DebugPanel.js","../../src/main.js"],"sourcesContent":["import { BaseComponent } from './BaseComponent';\nimport { eventSystem, EVENTS } from '../../core/EventSystem';\n\n/**\n * Navigation - Main navigation component for different game screens\n * Handles screen switching and navigation state\n */\nexport class Navigation extends BaseComponent {\n  constructor() {\n    super();\n    this.currentScreen = 'dashboard';\n    this.screens = {\n      dashboard: 'Dashboard',\n      economy: 'Economy',\n      politics: 'Politics',\n      global: 'Global Relations',\n      policies: 'Policies',\n      crisis: 'Crisis Management',\n      analytics: 'Analytics',\n    };\n\n    this.initializeNavigation();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Initialize navigation elements\n   */\n  initializeNavigation() {\n    // Create navigation if it doesn't exist\n    let navElement = document.querySelector('.navigation');\n    if (!navElement) {\n      navElement = this.createElement('nav', 'navigation');\n      const header = document.querySelector('.header');\n      if (header) {\n        header.appendChild(navElement);\n      }\n    }\n\n    this.element = navElement;\n    this.renderNavigationMenu();\n  }\n\n  /**\n   * Render navigation menu\n   */\n  renderNavigationMenu() {\n    const navList = this.createElement('ul', 'navigation__menu');\n\n    Object.entries(this.screens).forEach(([screenId, screenName]) => {\n      const listItem = this.createElement('li', 'navigation__item');\n      const link = this.createElement('a', 'navigation__link', screenName);\n      link.setAttribute('href', `#${screenId}`);\n      link.setAttribute('data-screen', screenId);\n\n      if (screenId === this.currentScreen) {\n        link.classList.add('navigation__link--active');\n      }\n\n      listItem.appendChild(link);\n      navList.appendChild(listItem);\n    });\n\n    this.element.innerHTML = '';\n    this.element.appendChild(navList);\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Handle navigation clicks\n    this.addEventListener(this.element, 'click', (e) => {\n      e.preventDefault();\n      const link = e.target.closest('.navigation__link');\n      if (link) {\n        const screenId = link.getAttribute('data-screen');\n        this.navigateToScreen(screenId);\n      }\n    });\n\n    // Listen for external navigation events\n    eventSystem.on('navigation:goto', (event) => {\n      this.navigateToScreen(event.data.screen);\n    });\n  }\n\n  /**\n   * Navigate to a specific screen\n   */\n  navigateToScreen(screenId) {\n    if (!this.screens[screenId] || screenId === this.currentScreen) {\n      return;\n    }\n\n    // Update active state\n    const currentActiveLink = this.element.querySelector('.navigation__link--active');\n    if (currentActiveLink) {\n      currentActiveLink.classList.remove('navigation__link--active');\n    }\n\n    const newActiveLink = this.element.querySelector(`[data-screen=\"${screenId}\"]`);\n    if (newActiveLink) {\n      newActiveLink.classList.add('navigation__link--active');\n    }\n\n    // Update current screen\n    const previousScreen = this.currentScreen;\n    this.currentScreen = screenId;\n\n    // Emit navigation event\n    eventSystem.emit(EVENTS.UI_UPDATE, {\n      type: 'navigation',\n      from: previousScreen,\n      to: screenId,\n      screenTitle: this.screens[screenId],\n    });\n\n    // Update browser URL without page reload\n    if (window.history) {\n      window.history.pushState(\n        { screen: screenId },\n        this.screens[screenId],\n        `#${screenId}`,\n      );\n    }\n\n    console.log(`Navigated to ${this.screens[screenId]}`);\n  }\n\n  /**\n   * Get current screen\n   */\n  getCurrentScreen() {\n    return this.currentScreen;\n  }\n\n  /**\n   * Update navigation based on game state\n   */\n  update(gameState) {\n    // Add badge indicators for screens with updates/notifications\n    this.updateScreenBadges(gameState);\n  }\n\n  /**\n   * Update screen badges for notifications\n   */\n  updateScreenBadges(gameState) {\n    // Clear existing badges\n    this.element.querySelectorAll('.navigation__badge').forEach((badge) => {\n      badge.remove();\n    });\n\n    // Add badges based on game state\n    if (gameState.events.pending.length > 0) {\n      this.addScreenBadge('policies', gameState.events.pending.length);\n    }\n\n    if (gameState.scandals.active.length > 0) {\n      this.addScreenBadge('crisis', gameState.scandals.active.length);\n    }\n\n    // Economic alerts\n    if (gameState.economy.gdpGrowth < 0 || gameState.economy.unemployment > 8) {\n      this.addScreenBadge('economy', '!');\n    }\n  }\n\n  /**\n   * Add a badge to a navigation screen\n   */\n  addScreenBadge(screenId, content) {\n    const link = this.element.querySelector(`[data-screen=\"${screenId}\"]`);\n    if (link) {\n      const badge = this.createElement('span', 'navigation__badge', content);\n      link.appendChild(badge);\n    }\n  }\n}\n\nexport default Navigation;\n","import { BaseComponent } from './BaseComponent';\nimport { eventSystem } from '../../core/EventSystem';\n\n/**\n * Modal - Reusable modal dialog component\n * Handles various dialog types like confirmations, forms, and info displays\n */\nexport class Modal extends BaseComponent {\n  constructor(options = {}) {\n    super();\n    this.options = {\n      title: 'Dialog',\n      content: '',\n      type: 'info', // info, confirm, form, custom\n      confirmText: 'OK',\n      cancelText: 'Cancel',\n      showCancel: false,\n      onConfirm: null,\n      onCancel: null,\n      backdrop: true,\n      closeable: true,\n      ...options,\n    };\n\n    this.isOpen = false;\n    this.createModal();\n  }\n\n  /**\n   * Create modal structure\n   */\n  createModal() {\n    // Create modal backdrop\n    this.backdrop = this.createElement('div', 'modal-backdrop');\n    if (!this.options.backdrop) {\n      this.backdrop.style.background = 'transparent';\n      this.backdrop.style.pointerEvents = 'none';\n    }\n\n    // Create modal container\n    this.element = this.createElement('div', 'modal');\n\n    // Create modal content\n    this.modalContent = this.createElement('div', 'modal__content');\n\n    // Create header\n    this.modalHeader = this.createElement('div', 'modal__header');\n    this.modalTitle = this.createElement('h3', 'modal__title', this.options.title);\n    this.modalHeader.appendChild(this.modalTitle);\n\n    // Create close button if closeable\n    if (this.options.closeable) {\n      this.closeButton = this.createElement('button', 'modal__close', '×');\n      this.modalHeader.appendChild(this.closeButton);\n    }\n\n    // Create body\n    this.modalBody = this.createElement('div', 'modal__body');\n    this.setContent(this.options.content);\n\n    // Create footer\n    this.modalFooter = this.createElement('div', 'modal__footer');\n    this.createFooterButtons();\n\n    // Assemble modal\n    this.modalContent.appendChild(this.modalHeader);\n    this.modalContent.appendChild(this.modalBody);\n    this.modalContent.appendChild(this.modalFooter);\n    this.element.appendChild(this.modalContent);\n    this.backdrop.appendChild(this.element);\n\n    this.setupEventListeners();\n    this.hide(); // Start hidden\n  }\n\n  /**\n   * Create footer buttons based on modal type\n   */\n  createFooterButtons() {\n    this.modalFooter.innerHTML = '';\n\n    if (this.options.showCancel || this.options.type === 'confirm') {\n      this.cancelButton = this.createElement('button', 'btn btn--secondary', this.options.cancelText);\n      this.modalFooter.appendChild(this.cancelButton);\n    }\n\n    this.confirmButton = this.createElement('button', 'btn btn--primary', this.options.confirmText);\n    this.modalFooter.appendChild(this.confirmButton);\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Close button\n    if (this.closeButton) {\n      this.addEventListener(this.closeButton, 'click', () => {\n        this.close();\n      });\n    }\n\n    // Cancel button\n    if (this.cancelButton) {\n      this.addEventListener(this.cancelButton, 'click', () => {\n        this.cancel();\n      });\n    }\n\n    // Confirm button\n    if (this.confirmButton) {\n      this.addEventListener(this.confirmButton, 'click', () => {\n        this.confirm();\n      });\n    }\n\n    // Backdrop click\n    if (this.options.backdrop && this.options.closeable) {\n      this.addEventListener(this.backdrop, 'click', (e) => {\n        if (e.target === this.backdrop) {\n          this.close();\n        }\n      });\n    }\n\n    // Escape key\n    this.addEventListener(document, 'keydown', (e) => {\n      if (e.key === 'Escape' && this.isOpen && this.options.closeable) {\n        this.close();\n      }\n    });\n  }\n\n  /**\n   * Set modal content\n   */\n  setContent(content) {\n    if (typeof content === 'string') {\n      this.modalBody.innerHTML = content;\n    } else if (content instanceof HTMLElement) {\n      this.modalBody.innerHTML = '';\n      this.modalBody.appendChild(content);\n    }\n  }\n\n  /**\n   * Set modal title\n   */\n  setTitle(title) {\n    this.options.title = title;\n    this.modalTitle.textContent = title;\n  }\n\n  /**\n   * Show the modal\n   */\n  show() {\n    if (this.isOpen) return;\n\n    // Add to DOM\n    document.body.appendChild(this.backdrop);\n\n    // Trigger show animation\n    requestAnimationFrame(() => {\n      this.backdrop.classList.add('modal-backdrop--visible');\n      this.element.classList.add('modal--visible');\n    });\n\n    this.isOpen = true;\n\n    // Focus first input if it's a form modal\n    if (this.options.type === 'form') {\n      const firstInput = this.modalBody.querySelector('input, textarea, select');\n      if (firstInput) {\n        firstInput.focus();\n      }\n    }\n\n    // Emit event\n    eventSystem.emit('modal:show', { modal: this });\n  }\n\n  /**\n   * Hide the modal\n   */\n  hide() {\n    if (!this.isOpen) return;\n\n    this.backdrop.classList.remove('modal-backdrop--visible');\n    this.element.classList.remove('modal--visible');\n\n    // Remove from DOM after animation\n    setTimeout(() => {\n      if (this.backdrop.parentNode) {\n        document.body.removeChild(this.backdrop);\n      }\n    }, 300);\n\n    this.isOpen = false;\n\n    // Emit event\n    eventSystem.emit('modal:hide', { modal: this });\n  }\n\n  /**\n   * Close modal (same as hide but can be overridden)\n   */\n  close() {\n    this.hide();\n  }\n\n  /**\n   * Handle confirm action\n   */\n  confirm() {\n    let result = true;\n\n    // If it's a form modal, collect form data\n    if (this.options.type === 'form') {\n      const formData = this.collectFormData();\n      if (this.options.onConfirm) {\n        result = this.options.onConfirm(formData);\n      }\n    } else if (this.options.onConfirm) {\n      result = this.options.onConfirm();\n    }\n\n    // Close modal if callback returns true or undefined\n    if (result !== false) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Handle cancel action\n   */\n  cancel() {\n    if (this.options.onCancel) {\n      this.options.onCancel();\n    }\n    this.hide();\n  }\n\n  /**\n   * Collect form data from modal body\n   */\n  collectFormData() {\n    const formData = {};\n    const inputs = this.modalBody.querySelectorAll('input, textarea, select');\n\n    inputs.forEach((input) => {\n      const name = input.name || input.id;\n      if (name) {\n        if (input.type === 'checkbox') {\n          formData[name] = input.checked;\n        } else if (input.type === 'radio') {\n          if (input.checked) {\n            formData[name] = input.value;\n          }\n        } else {\n          formData[name] = input.value;\n        }\n      }\n    });\n\n    return formData;\n  }\n\n  /**\n   * Static method to create quick confirmation dialog\n   */\n  static confirm(title, message, onConfirm, onCancel) {\n    return new Modal({\n      title,\n      content: `<p>${message}</p>`,\n      type: 'confirm',\n      confirmText: 'Yes',\n      cancelText: 'No',\n      showCancel: true,\n      onConfirm,\n      onCancel,\n    }).show();\n  }\n\n  /**\n   * Static method to create quick alert dialog\n   */\n  static alert(title, message, onConfirm) {\n    return new Modal({\n      title,\n      content: `<p>${message}</p>`,\n      type: 'info',\n      confirmText: 'OK',\n      onConfirm,\n    }).show();\n  }\n\n  /**\n   * Static method to create quick prompt dialog\n   */\n  static prompt(title, message, onConfirm, defaultValue = '') {\n    const content = `\n      <p>${message}</p>\n      <input type=\"text\" name=\"value\" value=\"${defaultValue}\" class=\"form-input\" style=\"width: 100%; margin-top: 10px;\">\n    `;\n\n    return new Modal({\n      title,\n      content,\n      type: 'form',\n      confirmText: 'OK',\n      cancelText: 'Cancel',\n      showCancel: true,\n      onConfirm: (formData) => {\n        if (onConfirm) {\n          onConfirm(formData.value);\n        }\n        return true;\n      },\n    }).show();\n  }\n\n  /**\n   * Destroy modal and clean up\n   */\n  destroy() {\n    this.hide();\n    this.removeAllEventListeners();\n  }\n}\n\nexport default Modal;\n","import { BaseComponent } from './BaseComponent';\nimport { eventSystem } from '../../core/EventSystem';\nimport { economicSimulation } from '../../core/EconomicSimulation';\nimport { gameEngine } from '../../core/GameEngine';\n\n/**\n * DebugPanel - Development testing features\n * Only shown when debug mode is enabled\n */\nexport class DebugPanel extends BaseComponent {\n  constructor() {\n    super();\n\n    // Only initialize if debug mode is enabled\n    // eslint-disable-next-line no-undef\n    if (typeof __ENABLE_DEBUG__ !== 'undefined' && __ENABLE_DEBUG__) {\n      this.initializeDebugPanel();\n      this.setupEventListeners();\n    }\n  }\n\n  /**\n   * Initialize the debug panel\n   */\n  initializeDebugPanel() {\n    // Create debug panel container\n    const debugPanel = this.createElement('div', 'debug-panel');\n    debugPanel.innerHTML = `\n      <div class=\"debug-header\">\n        <h3>🔧 Debug Panel</h3>\n        <button class=\"btn btn--small debug-toggle\" id=\"debug-toggle\">Hide</button>\n      </div>\n      \n      <div class=\"debug-content\">\n        <div class=\"debug-section\">\n          <h4>Game State</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-advance-time\">+10 Weeks</button>\n            <button class=\"btn btn--small\" id=\"debug-reset-game\">Reset Game</button>\n            <button class=\"btn btn--small\" id=\"debug-save-state\">Save State</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>Week: <span id=\"debug-week\">--</span></div>\n            <div>Year: <span id=\"debug-year\">--</span></div>\n            <div>Approval: <span id=\"debug-approval\">--</span>%</div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Economic Testing</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-trigger-boom\">Trigger Boom</button>\n            <button class=\"btn btn--small\" id=\"debug-trigger-recession\">Trigger Recession</button>\n            <button class=\"btn btn--small\" id=\"debug-random-shock\">Random Shock</button>\n            <button class=\"btn btn--small\" id=\"debug-reset-economy\">Reset Economy</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>GDP Growth: <span id=\"debug-gdp\">--</span>%</div>\n            <div>Unemployment: <span id=\"debug-unemployment\">--</span>%</div>\n            <div>Cycle: <span id=\"debug-cycle\">--</span></div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Policy Testing</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-all-policies\">Apply All Policies</button>\n            <button class=\"btn btn--small\" id=\"debug-clear-policies\">Clear Policies</button>\n            <button class=\"btn btn--small\" id=\"debug-max-stimulus\">Max Stimulus</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>Active Policies: <span id=\"debug-policies\">--</span></div>\n            <div>Confidence: <span id=\"debug-confidence\">--</span></div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Events & Shocks</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-financial-crisis\">Financial Crisis</button>\n            <button class=\"btn btn--small\" id=\"debug-tech-boom\">Tech Innovation</button>\n            <button class=\"btn btn--small\" id=\"debug-natural-disaster\">Natural Disaster</button>\n            <button class=\"btn btn--small\" id=\"debug-clear-shocks\">Clear Shocks</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>Active Shocks: <span id=\"debug-shocks\">--</span></div>\n            <div>Recent Events: <span id=\"debug-events\">--</span></div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Performance</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-performance\">Log Performance</button>\n            <button class=\"btn btn--small\" id=\"debug-memory\">Memory Usage</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>FPS: <span id=\"debug-fps\">--</span></div>\n            <div>Memory: <span id=\"debug-memory-usage\">--</span>MB</div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // Add styles\n    const style = document.createElement('style');\n    style.textContent = `\n      .debug-panel {\n        position: fixed;\n        top: 80px;\n        right: 20px;\n        width: 300px;\n        background: rgba(0, 0, 0, 0.9);\n        color: #00ff00;\n        border-radius: 8px;\n        padding: 16px;\n        font-family: 'Courier New', monospace;\n        font-size: 12px;\n        z-index: 10000;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);\n        max-height: 80vh;\n        overflow-y: auto;\n      }\n      \n      .debug-panel.hidden {\n        display: none;\n      }\n      \n      .debug-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 16px;\n        border-bottom: 1px solid #333;\n        padding-bottom: 8px;\n      }\n      \n      .debug-header h3 {\n        margin: 0;\n        color: #00ff00;\n        font-size: 14px;\n      }\n      \n      .debug-section {\n        margin-bottom: 16px;\n        border-bottom: 1px solid #333;\n        padding-bottom: 12px;\n      }\n      \n      .debug-section h4 {\n        margin: 0 0 8px 0;\n        color: #ffff00;\n        font-size: 12px;\n      }\n      \n      .debug-controls {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 4px;\n        margin-bottom: 8px;\n      }\n      \n      .debug-controls .btn {\n        font-size: 10px;\n        padding: 4px 8px;\n        background: #333;\n        color: #fff;\n        border: 1px solid #555;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n      \n      .debug-controls .btn:hover {\n        background: #555;\n      }\n      \n      .debug-info {\n        font-size: 10px;\n        line-height: 1.4;\n      }\n      \n      .debug-info div {\n        margin-bottom: 2px;\n      }\n      \n      .debug-toggle {\n        background: #666 !important;\n        color: #fff !important;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(debugPanel);\n    this.element = debugPanel;\n\n    this.setupDebugControls();\n  }\n\n  /**\n   * Setup debug control handlers\n   */\n  setupDebugControls() {\n    // Toggle visibility\n    const toggleBtn = document.getElementById('debug-toggle');\n    if (toggleBtn) {\n      this.addEventListener(toggleBtn, 'click', () => {\n        this.element.classList.toggle('hidden');\n        toggleBtn.textContent = this.element.classList.contains('hidden') ? 'Show' : 'Hide';\n      });\n    }\n\n    // Game state controls\n    this.addEventListener(document.getElementById('debug-advance-time'), 'click', () => {\n      for (let i = 0; i < 10; i += 1) {\n        gameEngine.nextTurn();\n      }\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-reset-game'), 'click', () => {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm('Reset game to initial state?')) {\n        gameEngine.gameState = gameEngine.createInitialGameState();\n        this.updateDebugInfo();\n      }\n    });\n\n    // Economic controls\n    this.addEventListener(document.getElementById('debug-trigger-boom'), 'click', () => {\n      economicSimulation.cycle.phase = 'expansion';\n      economicSimulation.metrics.gdpGrowth = 5.0;\n      economicSimulation.metrics.unemployment = 3.5;\n      economicSimulation.metrics.confidence = 90;\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-trigger-recession'), 'click', () => {\n      economicSimulation.cycle.phase = 'recession';\n      economicSimulation.metrics.gdpGrowth = -2.0;\n      economicSimulation.metrics.unemployment = 9.0;\n      economicSimulation.metrics.confidence = 25;\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-random-shock'), 'click', () => {\n      const shock = economicSimulation.generateRandomShock();\n      economicSimulation.applyShock(shock);\n      this.updateDebugInfo();\n    });\n\n    // Policy controls\n    this.addEventListener(document.getElementById('debug-all-policies'), 'click', () => {\n      const policies = [\n        {\n          type: 'fiscal_stimulus', name: 'Debug Stimulus', amount: 0.03, duration: 12,\n        },\n        {\n          type: 'education_investment', name: 'Debug Education', amount: 0.04, duration: 24,\n        },\n        {\n          type: 'infrastructure_investment', name: 'Debug Infrastructure', amount: 0.06, duration: 36,\n        },\n      ];\n\n      policies.forEach((policy) => economicSimulation.applyPolicy(policy));\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-clear-policies'), 'click', () => {\n      economicSimulation.policies = [];\n      this.updateDebugInfo();\n    });\n\n    // Shock controls\n    this.addEventListener(document.getElementById('debug-financial-crisis'), 'click', () => {\n      economicSimulation.applyShock({\n        type: 'financial_crisis',\n        magnitude: 2.0,\n        message: 'Debug Financial Crisis',\n        severity: 'danger',\n      });\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-tech-boom'), 'click', () => {\n      economicSimulation.applyShock({\n        type: 'tech_innovation',\n        magnitude: 1.5,\n        message: 'Debug Tech Innovation',\n        severity: 'success',\n      });\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-natural-disaster'), 'click', () => {\n      economicSimulation.applyShock({\n        type: 'natural_disaster',\n        magnitude: 1.2,\n        message: 'Debug Natural Disaster',\n        severity: 'danger',\n      });\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-clear-shocks'), 'click', () => {\n      economicSimulation.shocks = [];\n      this.updateDebugInfo();\n    });\n\n    // Performance controls\n    this.addEventListener(document.getElementById('debug-performance'), 'click', () => {\n      console.log('Performance Info:', {\n        gameState: gameEngine.getGameState(),\n        economicState: economicSimulation.getEconomicState(),\n        fps: gameEngine.fps,\n        memory: performance.memory ? `${Math.round(performance.memory.usedJSHeapSize / 1024 / 1024)}MB` : 'N/A',\n      });\n    });\n\n    this.addEventListener(document.getElementById('debug-memory'), 'click', () => {\n      if (performance.memory) {\n        console.log('Memory Usage:', {\n          used: `${Math.round(performance.memory.usedJSHeapSize / 1024 / 1024)}MB`,\n          total: `${Math.round(performance.memory.totalJSHeapSize / 1024 / 1024)}MB`,\n          limit: `${Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024)}MB`,\n        });\n      }\n    });\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    eventSystem.on('economic:update', () => {\n      this.updateDebugInfo();\n    });\n\n    // Update debug info every 5 seconds\n    setInterval(() => {\n      this.updateDebugInfo();\n    }, 5000);\n  }\n\n  /**\n   * Update debug information display\n   */\n  updateDebugInfo() {\n    if (!this.element) return;\n\n    const gameState = gameEngine.getGameState();\n    const economicState = economicSimulation.getEconomicState();\n\n    // Game state\n    this.updateElement('debug-week', gameState.time.week);\n    this.updateElement('debug-year', gameState.time.year);\n    this.updateElement('debug-approval', gameState.politics.approval);\n\n    // Economic state\n    this.updateElement('debug-gdp', economicState.metrics.gdpGrowth.toFixed(1));\n    this.updateElement('debug-unemployment', economicState.metrics.unemployment.toFixed(1));\n    this.updateElement('debug-cycle', economicState.cycle.phase);\n    this.updateElement('debug-confidence', economicState.metrics.confidence.toFixed(0));\n\n    // Policies and shocks\n    this.updateElement('debug-policies', economicState.activePolicies);\n    this.updateElement('debug-shocks', economicState.activeShocks);\n\n    // Performance\n    this.updateElement('debug-fps', gameEngine.fps || 0);\n    if (performance.memory) {\n      this.updateElement('debug-memory-usage', Math.round(performance.memory.usedJSHeapSize / 1024 / 1024));\n    }\n  }\n\n  /**\n   * Update element text content safely\n   */\n  updateElement(id, content) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.textContent = content;\n    }\n  }\n}\n\nexport default DebugPanel;\n","/**\n * SP_Sim - Main Application Entry Point\n * Initializes the game engine and UI components\n */\n\nimport { gameEngine } from './core/GameEngine';\nimport { eventSystem, EVENTS } from './core/EventSystem';\nimport { Dashboard } from './ui/components/Dashboard';\nimport { Navigation } from './ui/components/Navigation';\nimport { Modal } from './ui/components/Modal';\nimport { EconomicsScreen } from './ui/components/EconomicsScreen';\nimport { DebugPanel } from './ui/components/DebugPanel';\n\n/**\n * Main application class\n */\nclass SPSimApp {\n  constructor() {\n    this.gameEngine = gameEngine;\n    this.eventSystem = eventSystem;\n    this.dashboard = null;\n    this.navigation = null;\n    this.economicsScreen = null;\n    this.debugPanel = null;\n    this.currentScreen = 'dashboard';\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize the application\n   */\n  async initialize() {\n    try {\n      console.log('🎮 Starting SP_Sim - Political Economy Simulation');\n\n      // Initialize game engine\n      this.gameEngine.initialize();\n\n      // Initialize UI components\n      this.initializeUI();\n\n      // Setup global event listeners\n      this.setupEventListeners();\n\n      // Setup error handling\n      this.setupErrorHandling();\n\n      // Start the game\n      this.gameEngine.start();\n\n      this.isInitialized = true;\n      console.log('✅ SP_Sim initialized successfully');\n\n      // Initial UI update\n      this.updateUI();\n    } catch (error) {\n      console.error('❌ Failed to initialize SP_Sim:', error);\n      this.showError('Failed to initialize game. Please refresh the page.');\n    }\n  }\n\n  /**\n   * Initialize UI components\n   */\n  initializeUI() {\n    // Initialize navigation\n    this.navigation = new Navigation();\n\n    // Initialize dashboard\n    this.dashboard = new Dashboard();\n\n    // Initialize economics screen\n    this.economicsScreen = new EconomicsScreen();\n\n    // Initialize debug panel (only in debug mode)\n    // eslint-disable-next-line no-undef\n    if (typeof __ENABLE_DEBUG__ !== 'undefined' && __ENABLE_DEBUG__) {\n      this.debugPanel = new DebugPanel();\n      console.log('🔧 Debug panel enabled');\n    }\n\n    // Setup screen management\n    this.setupScreenManagement();\n\n    console.log('✅ UI components initialized');\n  }\n\n  /**\n   * Setup screen management\n   */\n  setupScreenManagement() {\n    // Listen for navigation events\n    this.eventSystem.on(EVENTS.UI_UPDATE, (event) => {\n      if (event.data.type === 'navigation') {\n        this.switchToScreen(event.data.to);\n      }\n    });\n\n    // Setup URL-based routing\n    window.addEventListener('popstate', (event) => {\n      const screen = event.state?.screen || 'dashboard';\n      this.switchToScreen(screen, false);\n    });\n\n    // Handle initial URL\n    const hash = window.location.hash.replace('#', '');\n    if (hash && this.navigation.screens[hash]) {\n      this.switchToScreen(hash, false);\n    }\n  }\n\n  /**\n   * Switch to a different screen\n   */\n  switchToScreen(screenId, _updateHistory = true) {\n    if (this.currentScreen === screenId) return;\n\n    // Hide all screens first\n    document.querySelectorAll('.screen').forEach((screen) => {\n      screen.classList.remove('screen--active');\n    });\n\n    // Show target screen\n    const targetScreen = document.querySelector(`#screen-${screenId}`);\n    if (targetScreen) {\n      targetScreen.classList.add('screen--active');\n\n      // Initialize specific screens\n      if (screenId === 'economy' && this.economicsScreen) {\n        this.economicsScreen.show();\n      }\n    } else {\n      // Create screen placeholder if it doesn't exist\n      this.createScreenPlaceholder(screenId);\n    }\n\n    this.currentScreen = screenId;\n\n    // Update navigation state\n    if (this.navigation) {\n      this.navigation.currentScreen = screenId;\n    }\n\n    console.log(`Switched to screen: ${screenId}`);\n  }\n\n  /**\n   * Create a placeholder screen for future implementation\n   */\n  createScreenPlaceholder(screenId) {\n    const screenName = this.navigation?.screens[screenId] || screenId;\n    const placeholder = document.createElement('div');\n    placeholder.id = `screen-${screenId}`;\n    placeholder.className = 'screen screen--active';\n    placeholder.innerHTML = `\n      <div class=\"panel\">\n        <h2 class=\"panel__title\">${screenName}</h2>\n        <div class=\"panel__content\">\n          <p>This screen is under development and will be available in a future update.</p>\n          <p>Screen: <strong>${screenName}</strong></p>\n        </div>\n      </div>\n    `;\n\n    const mainContent = document.querySelector('.main-content');\n    if (mainContent) {\n      mainContent.appendChild(placeholder);\n    }\n  }\n\n  /**\n   * Setup global event listeners\n   */\n  setupEventListeners() {\n    // Game state events\n    this.eventSystem.on(EVENTS.GAME_START, () => {\n      this.updateUI();\n    });\n\n    this.eventSystem.on(EVENTS.TURN_END, () => {\n      this.updateUI();\n    });\n\n    // Game control events\n    this.eventSystem.on('game:pause_toggle', () => {\n      this.handlePauseToggle();\n    });\n\n    this.eventSystem.on(EVENTS.GAME_SAVE, (event) => {\n      this.handleSaveGame(event.data.saveName);\n    });\n\n    // UI events\n    this.eventSystem.on('ui:load_game_dialog', () => {\n      this.showLoadGameDialog();\n    });\n\n    this.eventSystem.on('ui:decision_dialog', (event) => {\n      this.showDecisionDialog(event.data.decision);\n    });\n\n    // Error handling\n    this.eventSystem.on(EVENTS.UI_ERROR, (event) => {\n      this.showError(event.data.message);\n    });\n\n    // Notification handling\n    this.eventSystem.on(EVENTS.UI_NOTIFICATION, (event) => {\n      this.showNotification(event.data.message, event.data.type);\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', (event) => {\n      this.handleKeyboard(event);\n    });\n\n    // Window events\n    window.addEventListener('beforeunload', () => {\n      this.gameEngine.autoSave();\n    });\n\n    window.addEventListener('focus', () => {\n      if (this.isInitialized && this.gameEngine.isPaused) {\n        // Game was paused, could resume here if desired\n      }\n    });\n\n    window.addEventListener('blur', () => {\n      if (this.isInitialized && this.gameEngine.isRunning) {\n        // Auto-pause when window loses focus (optional)\n        // this.gameEngine.pause();\n      }\n    });\n  }\n\n  /**\n   * Setup error handling\n   */\n  setupErrorHandling() {\n    window.addEventListener('error', (event) => {\n      console.error('Unhandled error:', event.error);\n      this.showError('An unexpected error occurred. The game has been auto-saved.');\n      this.gameEngine.autoSave();\n    });\n\n    window.addEventListener('unhandledrejection', (event) => {\n      console.error('Unhandled promise rejection:', event.reason);\n      this.showError('An unexpected error occurred. The game has been auto-saved.');\n      this.gameEngine.autoSave();\n    });\n  }\n\n  /**\n   * Handle keyboard shortcuts\n   */\n  handleKeyboard(event) {\n    // Don't handle shortcuts if user is typing in an input\n    if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\n      return;\n    }\n\n    switch (event.key) {\n      case ' ': // Spacebar - pause/resume\n        event.preventDefault();\n        this.handlePauseToggle();\n        break;\n      case 'n': // N - next turn\n        event.preventDefault();\n        if (this.gameEngine.isPaused) {\n          this.gameEngine.nextTurn();\n        }\n        break;\n      case 's': // S - save (with Ctrl)\n        if (event.ctrlKey || event.metaKey) {\n          event.preventDefault();\n          this.handleSaveGame();\n        }\n        break;\n      case 'l': // L - load (with Ctrl)\n        if (event.ctrlKey || event.metaKey) {\n          event.preventDefault();\n          this.showLoadGameDialog();\n        }\n        break;\n      default:\n        // No action for other keys\n        break;\n    }\n  }\n\n  /**\n   * Update UI with current game state\n   */\n  updateUI() {\n    const gameState = this.gameEngine.getGameState();\n\n    if (this.dashboard) {\n      this.dashboard.update(gameState);\n    }\n\n    // Update page title with current game info\n    const title = `SP_Sim - Week ${gameState.time.week}, Year ${gameState.time.year}`;\n    const approval = `(${gameState.politics.approval}% approval)`;\n    document.title = `${title} ${approval}`;\n  }\n\n  /**\n   * Handle pause/resume toggle\n   */\n  handlePauseToggle() {\n    if (this.gameEngine.isPaused) {\n      this.gameEngine.resume();\n      this.updatePauseButton('Pause');\n    } else {\n      this.gameEngine.pause();\n      this.updatePauseButton('Resume');\n    }\n  }\n\n  /**\n   * Update pause button text\n   */\n  updatePauseButton(text) {\n    const pauseBtn = document.getElementById('pause-btn');\n    if (pauseBtn) {\n      pauseBtn.textContent = text;\n    }\n  }\n\n  /**\n   * Handle save game\n   */\n  handleSaveGame(requestedSaveName = null) {\n    let saveName = requestedSaveName;\n    if (!saveName) {\n      saveName = window.prompt('Enter a name for your save:'); // eslint-disable-line no-alert\n      if (saveName === null) return; // User cancelled\n    }\n\n    const success = this.gameEngine.saveGame(saveName);\n    if (success) {\n      this.showNotification('Game saved successfully!', 'success');\n    } else {\n      this.showError('Failed to save game.');\n    }\n  }\n\n  /**\n   * Show load game dialog\n   */\n  showLoadGameDialog() {\n    const saves = this.gameEngine.saveSystem.getAllSaves();\n\n    if (saves.length === 0) {\n      Modal.alert('No Saves Found', 'No saved games were found.', () => {\n        this.showNotification('No saved games found.', 'info');\n      });\n      return;\n    }\n\n    // Create save list HTML\n    let saveListHtml = '<div class=\"save-list\">';\n    saves.forEach((save, _index) => {\n      const date = new Date(save.timestamp).toLocaleString();\n      saveListHtml += `\n        <div class=\"save-item\" data-save-id=\"${save.id}\">\n          <div class=\"save-name\">${save.name}</div>\n          <div class=\"save-date\">${date}</div>\n        </div>\n      `;\n    });\n    saveListHtml += '</div>';\n\n    const modal = new Modal({\n      title: 'Load Game',\n      content: `\n        <p>Select a save to load:</p>\n        ${saveListHtml}\n        <style>\n          .save-list { max-height: 300px; overflow-y: auto; }\n          .save-item { \n            padding: 10px; \n            border: 1px solid var(--border-color); \n            margin-bottom: 5px; \n            cursor: pointer; \n            border-radius: 4px;\n            transition: background-color 0.2s;\n          }\n          .save-item:hover { background-color: var(--background-color); }\n          .save-item.selected { background-color: var(--secondary-color); color: white; }\n          .save-name { font-weight: bold; }\n          .save-date { font-size: 0.9em; color: var(--text-light); }\n        </style>\n      `,\n      confirmText: 'Load',\n      cancelText: 'Cancel',\n      showCancel: true,\n      onConfirm: () => {\n        const selected = document.querySelector('.save-item.selected');\n        if (!selected) {\n          this.showNotification('Please select a save to load.', 'warning');\n          return false;\n        }\n\n        const saveId = selected.getAttribute('data-save-id');\n        const success = this.gameEngine.loadGame(saveId);\n        if (success) {\n          this.showNotification('Game loaded successfully!', 'success');\n          this.updateUI();\n        } else {\n          this.showError('Failed to load game.');\n        }\n        return true;\n      },\n    });\n\n    // Add click handlers for save items\n    modal.show();\n    setTimeout(() => {\n      const saveItems = document.querySelectorAll('.save-item');\n      saveItems.forEach((item) => {\n        item.addEventListener('click', () => {\n          saveItems.forEach((i) => i.classList.remove('selected'));\n          item.classList.add('selected');\n        });\n      });\n    }, 100);\n  }\n\n  /**\n   * Show decision dialog\n   */\n  showDecisionDialog(decision) {\n    const modal = new Modal({\n      title: 'Political Decision',\n      content: `\n        <div class=\"decision-content\">\n          <p><strong>Decision:</strong> ${decision.description || decision}</p>\n          <div class=\"decision-options\">\n            <p>How would you like to respond?</p>\n          </div>\n        </div>\n      `,\n      confirmText: 'Approve',\n      cancelText: 'Reject',\n      showCancel: true,\n      onConfirm: () => {\n        this.eventSystem.emit('decision:response', {\n          decision,\n          response: 'approve',\n        });\n        this.showNotification('Decision approved.', 'success');\n        return true;\n      },\n      onCancel: () => {\n        this.eventSystem.emit('decision:response', {\n          decision,\n          response: 'reject',\n        });\n        this.showNotification('Decision rejected.', 'info');\n      },\n    });\n\n    modal.show();\n  }\n\n  /**\n   * Show error message\n   */\n  showError(message) {\n    console.error(message); // eslint-disable-line no-console\n    // Simple alert for now - in production you'd use a proper notification system\n    window.alert(`Error: ${message}`); // eslint-disable-line no-alert\n  }\n\n  /**\n   * Show notification\n   */\n  showNotification(message, type = 'info') {\n    console.log(`${type.toUpperCase()}: ${message}`);\n\n    // Create a simple notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification--${type}`;\n    notification.textContent = message;\n    let backgroundColor;\n    if (type === 'error') {\n      backgroundColor = '#e74c3c';\n    } else if (type === 'success') {\n      backgroundColor = '#27ae60';\n    } else {\n      backgroundColor = '#3498db';\n    }\n\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 16px;\n      background: ${backgroundColor};\n      color: white;\n      border-radius: 4px;\n      z-index: 10000;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n    `;\n\n    document.body.appendChild(notification);\n\n    // Remove notification after 3 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.parentNode.removeChild(notification);\n      }\n    }, 3000);\n  }\n}\n\n// Initialize the application when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new SPSimApp();\n  app.initialize();\n\n  // Make app available globally for debugging\n  window.spSimApp = app;\n});\n\n// Export for potential module usage\nexport default SPSimApp;\n"],"names":["Navigation","BaseComponent","constructor","currentScreen","screens","dashboard","economy","politics","global","policies","crisis","analytics","initializeNavigation","setupEventListeners","navElement","document","querySelector","createElement","header","appendChild","element","renderNavigationMenu","navList","Object","entries","forEach","screenId","screenName","listItem","link","setAttribute","classList","add","innerHTML","addEventListener","e","preventDefault","target","closest","getAttribute","navigateToScreen","eventSystem","on","event","data","screen","currentActiveLink","remove","newActiveLink","previousScreen","emit","EVENTS","UI_UPDATE","type","from","to","screenTitle","window","history","pushState","console","log","getCurrentScreen","update","gameState","updateScreenBadges","querySelectorAll","badge","events","pending","length","addScreenBadge","scandals","active","gdpGrowth","unemployment","content","Modal","options","title","confirmText","cancelText","showCancel","onConfirm","onCancel","backdrop","closeable","isOpen","createModal","style","background","pointerEvents","modalContent","modalHeader","modalTitle","closeButton","modalBody","setContent","modalFooter","createFooterButtons","hide","cancelButton","confirmButton","close","cancel","confirm","key","HTMLElement","setTitle","textContent","show","body","requestAnimationFrame","firstInput","focus","modal","setTimeout","parentNode","removeChild","result","formData","collectFormData","inputs","input","name","id","checked","value","message","alert","prompt","defaultValue","destroy","removeAllEventListeners","DebugPanel","initializeDebugPanel","debugPanel","head","setupDebugControls","toggleBtn","getElementById","toggle","contains","i","gameEngine","nextTurn","updateDebugInfo","createInitialGameState","economicSimulation","cycle","phase","metrics","confidence","shock","generateRandomShock","applyShock","amount","duration","policy","applyPolicy","magnitude","severity","shocks","getGameState","economicState","getEconomicState","fps","memory","performance","Math","round","usedJSHeapSize","used","total","totalJSHeapSize","limit","jsHeapSizeLimit","setInterval","updateElement","time","week","year","approval","toFixed","activePolicies","activeShocks","SPSimApp","navigation","economicsScreen","isInitialized","initialize","initializeUI","setupErrorHandling","start","updateUI","error","showError","Dashboard","EconomicsScreen","setupScreenManagement","switchToScreen","state","hash","location","replace","_updateHistory","targetScreen","createScreenPlaceholder","placeholder","className","mainContent","GAME_START","TURN_END","handlePauseToggle","GAME_SAVE","handleSaveGame","saveName","showLoadGameDialog","showDecisionDialog","decision","UI_ERROR","UI_NOTIFICATION","showNotification","handleKeyboard","autoSave","isPaused","isRunning","reason","tagName","ctrlKey","metaKey","resume","updatePauseButton","pause","text","pauseBtn","requestedSaveName","success","saveGame","saves","saveSystem","getAllSaves","saveListHtml","save","_index","date","Date","timestamp","toLocaleString","selected","saveId","loadGame","saveItems","item","description","response","toUpperCase","notification","backgroundColor","cssText","app","spSimApp"],"mappings":"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"}