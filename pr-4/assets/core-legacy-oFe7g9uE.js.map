{"version":3,"file":"core-legacy-oFe7g9uE.js","sources":["../../src/core/EventSystem.js","../../src/core/SaveSystem.js","../../src/core/EconomicSimulation.js","../../src/core/GameEngine.js"],"sourcesContent":["/**\n * EventSystem - Centralized event handling and dispatching for SP_Sim\n * Enables loose coupling between game modules through event-driven architecture\n */\nexport class EventSystem {\n  constructor() {\n    this.listeners = new Map();\n    this.eventQueue = [];\n    this.isProcessing = false;\n  }\n\n  /**\n   * Subscribe to an event type\n   * @param {string} eventType - The type of event to listen for\n   * @param {Function} callback - Function to call when event is dispatched\n   * @param {Object} context - Optional context for the callback\n   * @returns {Function} Unsubscribe function\n   */\n  on(eventType, callback, context = null) {\n    if (!this.listeners.has(eventType)) {\n      this.listeners.set(eventType, []);\n    }\n\n    const listener = { callback, context };\n    this.listeners.get(eventType).push(listener);\n\n    // Return unsubscribe function\n    return () => this.off(eventType, callback);\n  }\n\n  /**\n   * Unsubscribe from an event type\n   * @param {string} eventType - The event type to unsubscribe from\n   * @param {Function} callback - The callback function to remove\n   */\n  off(eventType, callback) {\n    if (!this.listeners.has(eventType)) return;\n\n    const listeners = this.listeners.get(eventType);\n    const index = listeners.findIndex((listener) => listener.callback === callback);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    // Clean up empty listener arrays\n    if (listeners.length === 0) {\n      this.listeners.delete(eventType);\n    }\n  }\n\n  /**\n   * Dispatch an event immediately\n   * @param {string} eventType - The type of event to dispatch\n   * @param {Object} data - Data to pass to event listeners\n   */\n  emit(eventType, data = {}) {\n    if (!this.listeners.has(eventType)) return;\n\n    const event = {\n      type: eventType,\n      data,\n      timestamp: Date.now(),\n    };\n\n    const listeners = this.listeners.get(eventType);\n\n    // Create a copy to avoid issues if listeners are modified during iteration\n    [...listeners].forEach((listener) => {\n      try {\n        if (listener.context) {\n          listener.callback.call(listener.context, event);\n        } else {\n          listener.callback(event);\n        }\n      } catch (error) {\n        console.error(`Error in event listener for ${eventType}:`, error);\n      }\n    });\n  }\n\n  /**\n   * Queue an event for later processing\n   * @param {string} eventType - The type of event to queue\n   * @param {Object} data - Data to pass to event listeners\n   */\n  queue(eventType, data = {}) {\n    this.eventQueue.push({\n      type: eventType,\n      data,\n      timestamp: Date.now(),\n    });\n  }\n\n  /**\n   * Process all queued events\n   */\n  processQueue() {\n    if (this.isProcessing) return;\n\n    this.isProcessing = true;\n\n    while (this.eventQueue.length > 0) {\n      const event = this.eventQueue.shift();\n      this.emit(event.type, event.data);\n    }\n\n    this.isProcessing = false;\n  }\n\n  /**\n   * Clear all event listeners\n   */\n  clear() {\n    this.listeners.clear();\n    this.eventQueue = [];\n    this.isProcessing = false;\n  }\n\n  /**\n   * Get statistics about the event system\n   * @returns {Object} Event system statistics\n   */\n  getStats() {\n    return {\n      eventTypes: this.listeners.size,\n      totalListeners: Array.from(this.listeners.values()).reduce((sum, arr) => sum + arr.length, 0),\n      queuedEvents: this.eventQueue.length,\n      isProcessing: this.isProcessing,\n    };\n  }\n}\n\n// Event type constants for better maintainability\nexport const EVENTS = {\n  // Game flow events\n  GAME_START: 'game:start',\n  GAME_PAUSE: 'game:pause',\n  GAME_RESUME: 'game:resume',\n  GAME_SAVE: 'game:save',\n  GAME_LOAD: 'game:load',\n  TURN_START: 'turn:start',\n  TURN_END: 'turn:end',\n\n  // Economic events\n  ECONOMY_UPDATE: 'economy:update',\n  GDP_CHANGE: 'economy:gdp_change',\n  UNEMPLOYMENT_CHANGE: 'economy:unemployment_change',\n  INFLATION_CHANGE: 'economy:inflation_change',\n  POLICY_ECONOMIC_EFFECT: 'economy:policy_effect',\n\n  // Political events\n  APPROVAL_CHANGE: 'politics:approval_change',\n  ELECTION_CALLED: 'politics:election_called',\n  VOTE_SCHEDULED: 'politics:vote_scheduled',\n  COALITION_CHANGE: 'politics:coalition_change',\n  POLICY_PROPOSED: 'politics:policy_proposed',\n  POLICY_PASSED: 'politics:policy_passed',\n  POLICY_FAILED: 'politics:policy_failed',\n\n  // Global events\n  DIPLOMATIC_CHANGE: 'global:diplomatic_change',\n  TRADE_AGREEMENT: 'global:trade_agreement',\n  INTERNATIONAL_CRISIS: 'global:international_crisis',\n  GLOBAL_EVENT: 'global:event',\n\n  // Scandal events\n  SCANDAL_EMERGE: 'scandal:emerge',\n  SCANDAL_ESCALATE: 'scandal:escalate',\n  SCANDAL_RESOLVE: 'scandal:resolve',\n  MEDIA_ATTENTION: 'scandal:media_attention',\n\n  // UI events\n  UI_UPDATE: 'ui:update',\n  UI_NOTIFICATION: 'ui:notification',\n  UI_ERROR: 'ui:error',\n};\n\n// Create and export global event system instance\nexport const eventSystem = new EventSystem();\n","/**\n * SaveSystem - Game save/load functionality using localStorage with compression\n * Handles game state persistence and recovery\n */\nexport class SaveSystem {\n  constructor() {\n    this.storageKey = 'sp_sim_saves';\n    this.autoSaveKey = 'sp_sim_autosave';\n    this.maxSaves = 10;\n    this.compressionEnabled = true;\n  }\n\n  /**\n   * Save game state\n   * @param {Object} gameState - Complete game state object\n   * @param {string} saveName - Optional name for the save file\n   * @returns {boolean} Success status\n   */\n  saveGame(gameState, saveName = null) {\n    try {\n      const saveData = this.prepareSaveData(gameState, saveName);\n      const saves = this.getAllSaves();\n\n      // Add new save\n      saves.unshift(saveData);\n\n      // Limit number of saves\n      if (saves.length > this.maxSaves) {\n        saves.splice(this.maxSaves);\n      }\n\n      // Store updated saves list\n      localStorage.setItem(this.storageKey, JSON.stringify(saves));\n\n      console.log(`Game saved successfully: ${saveData.name}`);\n      return true;\n    } catch (error) {\n      console.error('Failed to save game:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Load game state\n   * @param {string} saveId - ID of the save to load\n   * @returns {Object|null} Game state or null if failed\n   */\n  loadGame(saveId) {\n    try {\n      const saves = this.getAllSaves();\n      const saveData = saves.find((save) => save.id === saveId);\n\n      if (!saveData) {\n        console.error(`Save not found: ${saveId}`);\n        return null;\n      }\n\n      const gameState = this.decompressData(saveData.data);\n      console.log(`Game loaded successfully: ${saveData.name}`);\n      return gameState;\n    } catch (error) {\n      console.error('Failed to load game:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Auto-save game state (overwrites previous auto-save)\n   * @param {Object} gameState - Complete game state object\n   * @returns {boolean} Success status\n   */\n  autoSave(gameState) {\n    try {\n      const saveData = this.prepareSaveData(gameState, 'Auto Save');\n      localStorage.setItem(this.autoSaveKey, JSON.stringify(saveData));\n      return true;\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Load auto-save\n   * @returns {Object|null} Game state or null if no auto-save exists\n   */\n  loadAutoSave() {\n    try {\n      const autoSaveData = localStorage.getItem(this.autoSaveKey);\n      if (!autoSaveData) return null;\n\n      const saveData = JSON.parse(autoSaveData);\n      return this.decompressData(saveData.data);\n    } catch (error) {\n      console.error('Failed to load auto-save:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get all saved games\n   * @returns {Array} Array of save metadata\n   */\n  getAllSaves() {\n    try {\n      const saves = localStorage.getItem(this.storageKey);\n      return saves ? JSON.parse(saves) : [];\n    } catch (error) {\n      console.error('Failed to retrieve saves:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Delete a specific save\n   * @param {string} saveId - ID of save to delete\n   * @returns {boolean} Success status\n   */\n  deleteSave(saveId) {\n    try {\n      const saves = this.getAllSaves();\n      const filteredSaves = saves.filter((save) => save.id !== saveId);\n\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredSaves));\n      console.log(`Save deleted: ${saveId}`);\n      return true;\n    } catch (error) {\n      console.error('Failed to delete save:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all saves\n   * @returns {boolean} Success status\n   */\n  clearAllSaves() {\n    try {\n      localStorage.removeItem(this.storageKey);\n      localStorage.removeItem(this.autoSaveKey);\n      console.log('All saves cleared');\n      return true;\n    } catch (error) {\n      console.error('Failed to clear saves:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Export save data as downloadable file\n   * @param {string} saveId - ID of save to export\n   * @returns {boolean} Success status\n   */\n  exportSave(saveId) {\n    try {\n      const saves = this.getAllSaves();\n      const saveData = saves.find((save) => save.id === saveId);\n\n      if (!saveData) {\n        console.error(`Save not found for export: ${saveId}`);\n        return false;\n      }\n\n      const dataStr = JSON.stringify(saveData, null, 2);\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\n\n      const url = URL.createObjectURL(dataBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `sp_sim_save_${saveData.name.replace(/\\s+/g, '_')}.json`;\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      URL.revokeObjectURL(url);\n      return true;\n    } catch (error) {\n      console.error('Failed to export save:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Import save data from file\n   * @param {File} file - Save file to import\n   * @returns {Promise<boolean>} Success status\n   */\n  async importSave(file) {\n    try {\n      const text = await file.text();\n      const saveData = JSON.parse(text);\n\n      // Validate save data structure\n      if (!this.validateSaveData(saveData)) {\n        console.error('Invalid save file format');\n        return false;\n      }\n\n      // Generate new ID to avoid conflicts\n      saveData.id = this.generateSaveId();\n      saveData.imported = true;\n\n      const saves = this.getAllSaves();\n      saves.unshift(saveData);\n\n      localStorage.setItem(this.storageKey, JSON.stringify(saves));\n      console.log(`Save imported successfully: ${saveData.name}`);\n      return true;\n    } catch (error) {\n      console.error('Failed to import save:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get storage usage statistics\n   * @returns {Object} Storage usage information\n   */\n  getStorageStats() {\n    try {\n      const saves = this.getAllSaves();\n      const autoSave = localStorage.getItem(this.autoSaveKey);\n\n      const savesSize = new Blob([localStorage.getItem(this.storageKey) || '']).size;\n      const autoSaveSize = new Blob([autoSave || '']).size;\n      const totalSize = savesSize + autoSaveSize;\n\n      return {\n        saveCount: saves.length,\n        totalSizeBytes: totalSize,\n        totalSizeKB: Math.round(totalSize / 1024),\n        hasAutoSave: !!autoSave,\n        maxSaves: this.maxSaves,\n      };\n    } catch (error) {\n      console.error('Failed to get storage stats:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Prepare save data with metadata\n   * @private\n   */\n  prepareSaveData(gameState, saveName) {\n    const now = new Date();\n    const name = saveName || `Save ${now.toLocaleDateString()} ${now.toLocaleTimeString()}`;\n\n    return {\n      id: this.generateSaveId(),\n      name,\n      timestamp: now.toISOString(),\n      version: gameState.version || '1.0.0',\n      gameTime: gameState.time || {},\n      data: this.compressData(gameState),\n    };\n  }\n\n  /**\n   * Generate unique save ID\n   * @private\n   */\n  generateSaveId() {\n    return `save_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Compress game state data\n   * @private\n   */\n  compressData(data) {\n    if (!this.compressionEnabled) return data;\n\n    try {\n      // Simple JSON compression by removing whitespace\n      // In a production environment, you might want to use a proper compression library\n      return JSON.stringify(data);\n    } catch (error) {\n      console.error('Compression failed:', error);\n      return data;\n    }\n  }\n\n  /**\n   * Decompress game state data\n   * @private\n   */\n  decompressData(data) {\n    if (!this.compressionEnabled) return data;\n\n    try {\n      return typeof data === 'string' ? JSON.parse(data) : data;\n    } catch (error) {\n      console.error('Decompression failed:', error);\n      return data;\n    }\n  }\n\n  /**\n   * Validate save data structure\n   * @private\n   */\n  validateSaveData(saveData) {\n    return (\n      saveData\n      && typeof saveData === 'object'\n      && saveData.id\n      && saveData.name\n      && saveData.timestamp\n      && saveData.data\n    );\n  }\n}\n\n// Create and export global save system instance\nexport const saveSystem = new SaveSystem();\n","import { eventSystem, EVENTS } from './EventSystem';\n\n/**\n * EconomicSimulation - Models economic metrics and their interactions\n * Implements GDP, unemployment, inflation, and economic cycles\n */\nexport class EconomicSimulation {\n  constructor() {\n    this.metrics = {\n      gdp: 1000000000000, // $1 trillion baseline\n      gdpGrowth: 2.1,\n      unemployment: 6.0,\n      inflation: 2.4,\n      interestRate: 3.5,\n      consumerSpending: 0.65, // 65% of GDP\n      governmentSpending: 0.20, // 20% of GDP\n      investment: 0.18, // 18% of GDP\n      netExports: -0.03, // -3% of GDP (trade deficit)\n      productivity: 1.0, // Baseline productivity index\n      confidence: 75, // Consumer/business confidence (0-100)\n    };\n\n    this.sectors = {\n      agriculture: { share: 0.05, growth: 1.2, volatility: 0.15 },\n      manufacturing: { share: 0.25, growth: 2.8, volatility: 0.10 },\n      services: { share: 0.70, growth: 2.0, volatility: 0.05 },\n    };\n\n    this.cycle = {\n      phase: 'expansion', // recession, trough, expansion, peak\n      duration: 0, // weeks in current phase\n      intensity: 0.5, // 0-1 scale\n    };\n\n    this.shocks = [];\n    this.policies = [];\n\n    this.setupEventListeners();\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    eventSystem.on(EVENTS.TURN_END, () => {\n      this.updateEconomy();\n    });\n\n    eventSystem.on('policy:implemented', (event) => {\n      this.applyPolicy(event.data.policy);\n    });\n\n    eventSystem.on('economic:shock', (event) => {\n      this.applyShock(event.data.shock);\n    });\n  }\n\n  /**\n   * Update economic metrics each turn\n   */\n  updateEconomy() {\n    // Update business cycle\n    this.updateBusinessCycle();\n\n    // Calculate sector performance\n    this.updateSectors();\n\n    // Update core metrics\n    this.updateGDP();\n    this.updateUnemployment();\n    this.updateInflation();\n    this.updateConfidence();\n\n    // Apply any active policies\n    this.applyActivePolicies();\n\n    // Check for automatic events\n    this.checkEconomicEvents();\n\n    // Emit economic update event\n    eventSystem.emit('economic:update', {\n      metrics: { ...this.metrics },\n      sectors: { ...this.sectors },\n      cycle: { ...this.cycle },\n    });\n  }\n\n  /**\n   * Update business cycle\n   */\n  updateBusinessCycle() {\n    this.cycle.duration += 1;\n\n    // Business cycle transitions based on duration and economic conditions\n    switch (this.cycle.phase) {\n      case 'expansion':\n        if (this.cycle.duration > 104 || this.metrics.inflation > 4.5) { // 2 years or high inflation\n          this.cycle.phase = 'peak';\n          this.cycle.duration = 0;\n          this.cycle.intensity = Math.min(1.0, this.cycle.intensity + 0.1);\n        } else {\n          this.cycle.intensity = Math.min(1.0, this.cycle.intensity + 0.02);\n        }\n        break;\n\n      case 'peak':\n        if (this.cycle.duration > 8 || this.metrics.unemployment > 7.5) { // 2 months or high unemployment\n          this.cycle.phase = 'recession';\n          this.cycle.duration = 0;\n          this.cycle.intensity = Math.max(0.1, this.cycle.intensity - 0.1);\n        }\n        break;\n\n      case 'recession':\n        if (this.cycle.duration > 52 || this.metrics.gdpGrowth > 0) { // 1 year or positive growth\n          this.cycle.phase = 'trough';\n          this.cycle.duration = 0;\n          this.cycle.intensity = Math.max(0.1, this.cycle.intensity - 0.02);\n        } else {\n          this.cycle.intensity = Math.max(0.1, this.cycle.intensity - 0.03);\n        }\n        break;\n\n      case 'trough':\n        if (this.cycle.duration > 12 || this.metrics.confidence > 60) { // 3 months or improving confidence\n          this.cycle.phase = 'expansion';\n          this.cycle.duration = 0;\n          this.cycle.intensity = Math.min(1.0, this.cycle.intensity + 0.05);\n        }\n        break;\n\n      default:\n        // Unknown phase, default to expansion\n        this.cycle.phase = 'expansion';\n        this.cycle.duration = 0;\n        break;\n    }\n  }\n\n  /**\n   * Update sector performance\n   */\n  updateSectors() {\n    Object.keys(this.sectors).forEach((sectorName) => {\n      const sector = this.sectors[sectorName];\n\n      // Base growth with cycle effects\n      let { growth } = sector;\n\n      // Apply business cycle effects\n      const cycleEffect = this.getCycleEffect();\n      growth *= cycleEffect;\n\n      // Add volatility\n      const volatility = (Math.random() - 0.5) * sector.volatility * 2;\n      growth += volatility;\n\n      // Update sector metrics\n      sector.currentGrowth = growth;\n      sector.cycleEffect = cycleEffect;\n    });\n  }\n\n  /**\n   * Update GDP and GDP growth\n   */\n  updateGDP() {\n    // Calculate weighted sector growth\n    let weightedGrowth = 0;\n    Object.keys(this.sectors).forEach((sectorName) => {\n      const sector = this.sectors[sectorName];\n      weightedGrowth += sector.share * (sector.currentGrowth || sector.growth);\n    });\n\n    // Apply productivity effects\n    const productivityEffect = (this.metrics.productivity - 1.0) * 0.5;\n    weightedGrowth += productivityEffect;\n\n    // Apply confidence effects\n    const confidenceEffect = (this.metrics.confidence - 50) / 100;\n    weightedGrowth += confidenceEffect;\n\n    // Update GDP growth (annualized from quarterly)\n    this.metrics.gdpGrowth = this.smoothUpdate(this.metrics.gdpGrowth, weightedGrowth, 0.3);\n\n    // Update actual GDP\n    const weeklyGrowthRate = this.metrics.gdpGrowth / 52 / 100;\n    this.metrics.gdp *= (1 + weeklyGrowthRate);\n  }\n\n  /**\n   * Update unemployment rate\n   */\n  updateUnemployment() {\n    // Okun's Law: unemployment inversely related to GDP growth\n    const targetUnemployment = 6.0 - (this.metrics.gdpGrowth - 2.0) * 0.4;\n\n    // Business cycle effects\n    let cycleAdjustment = 0;\n    switch (this.cycle.phase) {\n      case 'recession':\n        cycleAdjustment = 0.5;\n        break;\n      case 'trough':\n        cycleAdjustment = 0.2;\n        break;\n      case 'expansion':\n        cycleAdjustment = -0.3;\n        break;\n      case 'peak':\n        cycleAdjustment = -0.1;\n        break;\n      default:\n        cycleAdjustment = 0;\n        break;\n    }\n\n    const adjustedTarget = Math.max(3.0, Math.min(12.0, targetUnemployment + cycleAdjustment));\n    this.metrics.unemployment = this.smoothUpdate(this.metrics.unemployment, adjustedTarget, 0.2);\n  }\n\n  /**\n   * Update inflation rate\n   */\n  updateInflation() {\n    // Phillips Curve: inverse relationship with unemployment\n    const demandPullInflation = Math.max(0, (7.0 - this.metrics.unemployment) * 0.3);\n\n    // Cost-push inflation from business cycle\n    const costPushInflation = this.cycle.intensity * 0.8;\n\n    // Money supply effects (simplified)\n    const monetaryInflation = (this.metrics.interestRate < 2.0) ? 0.5 : -0.2;\n\n    const targetInflation = 2.0 + demandPullInflation + costPushInflation + monetaryInflation;\n\n    // Add some volatility\n    const volatility = (Math.random() - 0.5) * 0.4;\n    const adjustedTarget = Math.max(0, targetInflation + volatility);\n\n    this.metrics.inflation = this.smoothUpdate(this.metrics.inflation, adjustedTarget, 0.25);\n  }\n\n  /**\n   * Update consumer and business confidence\n   */\n  updateConfidence() {\n    let confidenceChange = 0;\n\n    // Economic performance effects\n    if (this.metrics.gdpGrowth > 3.0) confidenceChange += 2;\n    else if (this.metrics.gdpGrowth < 0) confidenceChange -= 3;\n\n    if (this.metrics.unemployment < 5.0) confidenceChange += 1;\n    else if (this.metrics.unemployment > 8.0) confidenceChange -= 2;\n\n    if (this.metrics.inflation > 4.0) confidenceChange -= 2;\n    else if (this.metrics.inflation < 1.0) confidenceChange -= 1;\n\n    // Business cycle effects\n    switch (this.cycle.phase) {\n      case 'expansion':\n        confidenceChange += 1;\n        break;\n      case 'recession':\n        confidenceChange -= 2;\n        break;\n      case 'trough':\n        confidenceChange += 0.5; // Recovery hope\n        break;\n      default:\n        break;\n    }\n\n    // Random events\n    confidenceChange += (Math.random() - 0.5) * 2;\n\n    this.metrics.confidence = Math.max(0, Math.min(100, this.metrics.confidence + confidenceChange));\n  }\n\n  /**\n   * Apply economic policy\n   */\n  applyPolicy(policy) {\n    this.policies.push({\n      ...policy,\n      duration: policy.duration || 12, // weeks\n      implementedWeek: 0,\n    });\n\n    // Immediate effects\n    switch (policy.type) {\n      case 'fiscal_stimulus':\n        this.metrics.confidence += 5;\n        this.metrics.governmentSpending += policy.amount || 0.02;\n        break;\n      case 'tax_cut':\n        this.metrics.confidence += 3;\n        this.metrics.consumerSpending += policy.amount || 0.01;\n        break;\n      case 'tax_increase':\n        this.metrics.confidence -= 4;\n        this.metrics.consumerSpending -= policy.amount || 0.015;\n        break;\n      case 'interest_rate_change':\n        this.metrics.interestRate += policy.change || 0;\n        break;\n      case 'infrastructure_investment':\n        this.metrics.productivity += policy.amount || 0.05;\n        this.sectors.manufacturing.growth += policy.amount || 0.5;\n        break;\n      case 'education_investment':\n        this.metrics.productivity += policy.amount || 0.03;\n        this.sectors.services.growth += policy.amount || 0.3;\n        break;\n      case 'healthcare_investment':\n        this.metrics.productivity += policy.amount || 0.02;\n        this.metrics.confidence += 3;\n        break;\n      case 'green_energy_investment':\n        this.sectors.manufacturing.growth += policy.amount || 0.4;\n        this.metrics.productivity += policy.amount || 0.04;\n        break;\n      case 'trade_promotion':\n        this.metrics.netExports += policy.amount || 0.01;\n        this.sectors.manufacturing.growth += policy.amount || 0.3;\n        break;\n      case 'regulation_increase':\n        this.sectors.services.growth -= policy.amount || 0.2;\n        this.metrics.confidence -= 2;\n        break;\n      case 'regulation_decrease':\n        this.sectors.services.growth += policy.amount || 0.3;\n        this.metrics.confidence += 2;\n        break;\n      case 'agricultural_subsidies':\n        this.sectors.agriculture.growth += policy.amount || 0.5;\n        this.metrics.governmentSpending += policy.amount || 0.005;\n        break;\n      case 'minimum_wage_increase':\n        this.metrics.consumerSpending += policy.amount || 0.008;\n        this.metrics.confidence += 2;\n        this.metrics.inflation += policy.amount || 0.3;\n        break;\n      default:\n        break;\n    }\n\n    eventSystem.emit('economic:policy_applied', {\n      policy,\n      newMetrics: { ...this.metrics },\n    });\n  }\n\n  /**\n   * Apply active policies each turn\n   */\n  applyActivePolicies() {\n    this.policies = this.policies.filter((policy) => {\n      policy.implementedWeek += 1;\n\n      // Apply ongoing effects\n      if (policy.ongoingEffects) {\n        Object.keys(policy.ongoingEffects).forEach((metric) => {\n          if (this.metrics[metric] !== undefined) {\n            this.metrics[metric] += policy.ongoingEffects[metric];\n          }\n        });\n      }\n\n      // Remove expired policies\n      return policy.implementedWeek < policy.duration;\n    });\n  }\n\n  /**\n   * Apply economic shock\n   */\n  applyShock(shock) {\n    this.shocks.push(shock);\n\n    switch (shock.type) {\n      case 'oil_price_spike':\n        this.metrics.inflation += shock.magnitude || 1.0;\n        this.metrics.confidence -= shock.magnitude * 5 || 10;\n        break;\n      case 'financial_crisis':\n        this.metrics.confidence -= shock.magnitude * 20 || 30;\n        this.cycle.phase = 'recession';\n        this.cycle.duration = 0;\n        break;\n      case 'trade_war':\n        this.metrics.netExports -= shock.magnitude || 0.02;\n        this.sectors.manufacturing.growth -= shock.magnitude || 1.0;\n        break;\n      case 'pandemic':\n        this.metrics.gdpGrowth -= shock.magnitude || 5.0;\n        this.metrics.unemployment += shock.magnitude || 3.0;\n        this.sectors.services.growth -= shock.magnitude || 3.0;\n        break;\n      case 'supply_chain_disruption':\n        this.sectors.manufacturing.growth -= shock.magnitude;\n        this.sectors.services.growth -= shock.magnitude * 0.5;\n        this.metrics.inflation += shock.magnitude * 0.3;\n        break;\n      case 'commodity_price_spike':\n        this.metrics.inflation += shock.magnitude;\n        this.sectors.agriculture.growth -= shock.magnitude * 0.8;\n        this.metrics.confidence -= shock.magnitude * 3;\n        break;\n      case 'currency_fluctuation':\n        this.metrics.netExports += (Math.random() - 0.5) * shock.magnitude * 0.02;\n        this.metrics.inflation += shock.magnitude * 0.2;\n        break;\n      case 'tech_innovation':\n        this.metrics.productivity += shock.magnitude * 0.1;\n        this.sectors.services.growth += shock.magnitude;\n        this.metrics.confidence += shock.magnitude * 5;\n        break;\n      case 'natural_disaster':\n        this.metrics.gdpGrowth -= shock.magnitude;\n        this.sectors.agriculture.growth -= shock.magnitude * 1.5;\n        this.metrics.confidence -= shock.magnitude * 8;\n        break;\n      case 'geopolitical_tension':\n        this.metrics.confidence -= shock.magnitude * 6;\n        this.metrics.netExports -= shock.magnitude * 0.01;\n        this.metrics.investment -= shock.magnitude * 0.01;\n        break;\n      default:\n        break;\n    }\n\n    eventSystem.emit('economic:shock_applied', {\n      shock,\n      newMetrics: { ...this.metrics },\n    });\n  }\n\n  /**\n   * Check for automatic economic events\n   */\n  checkEconomicEvents() {\n    const events = [];\n\n    // High inflation warning\n    if (this.metrics.inflation > 4.0 && Math.random() < 0.1) {\n      events.push({\n        type: 'high_inflation_warning',\n        message: `Inflation has reached ${this.metrics.inflation.toFixed(1)}%. Consider monetary policy adjustments.`,\n        severity: 'warning',\n      });\n    }\n\n    // Recession warning\n    if (this.metrics.gdpGrowth < -1.0 && this.cycle.phase !== 'recession') {\n      events.push({\n        type: 'recession_warning',\n        message: 'Economic indicators suggest a recession. GDP growth is negative.',\n        severity: 'danger',\n      });\n    }\n\n    // Low unemployment celebration\n    if (this.metrics.unemployment < 4.0 && Math.random() < 0.05) {\n      events.push({\n        type: 'low_unemployment',\n        message: `Unemployment has dropped to ${this.metrics.unemployment.toFixed(1)}%. Conditions are favorable.`,\n        severity: 'success',\n      });\n    }\n\n    // Economic boom detection\n    if (this.metrics.gdpGrowth > 4.0 && this.metrics.unemployment < 5.0 && Math.random() < 0.08) {\n      events.push({\n        type: 'economic_boom',\n        message: `Economic boom detected! GDP growth at ${this.metrics.gdpGrowth.toFixed(1)}% with low unemployment.`,\n        severity: 'success',\n      });\n    }\n\n    // Deflation warning\n    if (this.metrics.inflation < 0.5 && Math.random() < 0.06) {\n      events.push({\n        type: 'deflation_risk',\n        message: `Deflation risk: Inflation is only ${this.metrics.inflation.toFixed(1)}%. Consider stimulus measures.`,\n        severity: 'warning',\n      });\n    }\n\n    // Stagflation detection\n    if (this.metrics.inflation > 3.5 && this.metrics.unemployment > 7.0\n        && this.metrics.gdpGrowth < 1.0 && Math.random() < 0.1) {\n      events.push({\n        type: 'stagflation',\n        message: 'Stagflation detected: High inflation and unemployment with low growth. '\n          + 'Difficult policy choices ahead.',\n        severity: 'danger',\n      });\n    }\n\n    // Interest rate milestones\n    if (this.metrics.interestRate <= 0.5 && Math.random() < 0.05) {\n      events.push({\n        type: 'zero_interest_rate',\n        message: 'Interest rates near zero. Traditional monetary policy effectiveness limited.',\n        severity: 'warning',\n      });\n    }\n\n    // Sector-specific events\n    Object.keys(this.sectors).forEach((sectorName) => {\n      const sector = this.sectors[sectorName];\n\n      // Sector boom\n      if (sector.currentGrowth > 5.0 && Math.random() < 0.04) {\n        events.push({\n          type: 'sector_boom',\n          message: `${sectorName.charAt(0).toUpperCase() + sectorName.slice(1)} sector `\n            + `experiencing rapid growth at ${sector.currentGrowth.toFixed(1)}%.`,\n          severity: 'success',\n        });\n      }\n\n      // Sector decline\n      if (sector.currentGrowth < -2.0 && Math.random() < 0.06) {\n        events.push({\n          type: 'sector_decline',\n          message: `${sectorName.charAt(0).toUpperCase() + sectorName.slice(1)} sector `\n            + `declining at ${sector.currentGrowth.toFixed(1)}%. May need targeted support.`,\n          severity: 'warning',\n        });\n      }\n    });\n\n    // Random economic shocks (Week 8 feature)\n    if (Math.random() < 0.02) { // 2% chance per week\n      const shockType = this.generateRandomShock();\n      if (shockType) {\n        events.push(shockType);\n        this.applyShock(shockType);\n      }\n    }\n\n    // Confidence milestones\n    if (this.metrics.confidence > 85 && Math.random() < 0.03) {\n      events.push({\n        type: 'high_confidence',\n        message: `Consumer confidence at ${this.metrics.confidence.toFixed(0)}%. `\n          + 'Strong economic sentiment boosting spending.',\n        severity: 'success',\n      });\n    }\n\n    if (this.metrics.confidence < 30 && Math.random() < 0.05) {\n      events.push({\n        type: 'confidence_crisis',\n        message: `Consumer confidence plummeted to ${this.metrics.confidence.toFixed(0)}%. `\n          + 'Economic uncertainty affecting all sectors.',\n        severity: 'danger',\n      });\n    }\n\n    // Emit events\n    events.forEach((event) => {\n      eventSystem.emit('economic:event', event);\n    });\n  }\n\n  /**\n   * Generate random economic shock (Week 8 feature)\n   */\n  generateRandomShock() {\n    const shocks = [\n      {\n        type: 'supply_chain_disruption',\n        message: 'Global supply chain disruption affecting manufacturing and services.',\n        severity: 'warning',\n        magnitude: 0.5 + Math.random() * 1.0,\n      },\n      {\n        type: 'commodity_price_spike',\n        message: 'Commodity prices surge affecting production costs and inflation.',\n        severity: 'warning',\n        magnitude: 0.3 + Math.random() * 0.7,\n      },\n      {\n        type: 'currency_fluctuation',\n        message: 'Major currency fluctuation impacting trade balance and imports.',\n        severity: 'info',\n        magnitude: 0.2 + Math.random() * 0.5,\n      },\n      {\n        type: 'tech_innovation',\n        message: 'Technological breakthrough boosting productivity in key sectors.',\n        severity: 'success',\n        magnitude: 0.3 + Math.random() * 0.4,\n      },\n      {\n        type: 'natural_disaster',\n        message: 'Natural disaster affecting regional economic activity.',\n        severity: 'danger',\n        magnitude: 0.4 + Math.random() * 0.8,\n      },\n      {\n        type: 'geopolitical_tension',\n        message: 'Geopolitical tensions affecting trade and investor confidence.',\n        severity: 'warning',\n        magnitude: 0.3 + Math.random() * 0.6,\n      },\n    ];\n\n    return shocks[Math.floor(Math.random() * shocks.length)];\n  }\n\n  /**\n   * Get business cycle effect multiplier\n   */\n  getCycleEffect() {\n    switch (this.cycle.phase) {\n      case 'expansion':\n        return 1.0 + (this.cycle.intensity * 0.2);\n      case 'peak':\n        return 1.1;\n      case 'recession':\n        return 0.8 - (this.cycle.intensity * 0.3);\n      case 'trough':\n        return 0.7;\n      default:\n        return 1.0;\n    }\n  }\n\n  /**\n   * Smooth update utility for gradual changes\n   */\n  smoothUpdate(current, target, speed) {\n    return current + (target - current) * speed;\n  }\n\n  /**\n   * Get current economic state\n   */\n  getEconomicState() {\n    return {\n      metrics: { ...this.metrics },\n      sectors: { ...this.sectors },\n      cycle: { ...this.cycle },\n      activePolicies: this.policies.length,\n      activeShocks: this.shocks.length,\n    };\n  }\n\n  /**\n   * Get economic forecast\n   */\n  getForecast(weeksAhead = 12) {\n    // Simple linear projection based on current trends\n    const forecast = {\n      gdpGrowth: [],\n      unemployment: [],\n      inflation: [],\n    };\n\n    let currentGDP = this.metrics.gdpGrowth;\n    let currentUnemployment = this.metrics.unemployment;\n    let currentInflation = this.metrics.inflation;\n\n    for (let week = 1; week <= weeksAhead; week += 1) {\n      // Simple trend continuation with some mean reversion\n      currentGDP = this.smoothUpdate(currentGDP, 2.1, 0.05); // Mean revert to 2.1%\n      currentUnemployment = this.smoothUpdate(currentUnemployment, 6.0, 0.03); // Mean revert to 6%\n      currentInflation = this.smoothUpdate(currentInflation, 2.0, 0.04); // Mean revert to 2%\n\n      forecast.gdpGrowth.push(Number(currentGDP.toFixed(2)));\n      forecast.unemployment.push(Number(currentUnemployment.toFixed(1)));\n      forecast.inflation.push(Number(currentInflation.toFixed(1)));\n    }\n\n    return forecast;\n  }\n}\n\n// Create and export global economic simulation instance\nexport const economicSimulation = new EconomicSimulation();\n","import { EVENTS, eventSystem } from './EventSystem';\nimport { saveSystem } from './SaveSystem';\nimport { economicSimulation } from './EconomicSimulation';\n\n/**\n * GameEngine - Core game loop and state management for SP_Sim\n * Orchestrates all game systems and handles the main game loop\n */\nexport class GameEngine {\n  constructor() {\n    this.eventSystem = eventSystem;\n    this.saveSystem = saveSystem;\n    this.economicSimulation = economicSimulation;\n\n    // Game state\n    this.gameState = this.createInitialGameState();\n    this.isRunning = false;\n    this.isPaused = false;\n    this.gameSpeed = 1000; // milliseconds per turn\n    this.lastUpdateTime = 0;\n    this.gameLoopId = null;\n\n    // Performance tracking\n    this.frameCount = 0;\n    this.lastFrameTime = Date.now();\n    this.fps = 0;\n\n    this.initializeEventListeners();\n  }\n\n  /**\n   * Initialize the game\n   */\n  initialize() {\n    console.log('Initializing SP_Sim Game Engine...');\n\n    // Try to load auto-save\n    const autoSave = this.saveSystem.loadAutoSave();\n    if (autoSave) {\n      this.gameState = autoSave;\n      console.log('Auto-save loaded');\n    }\n\n    this.eventSystem.emit(EVENTS.GAME_START, { gameState: this.gameState });\n    console.log('Game Engine initialized successfully');\n  }\n\n  /**\n   * Start the game loop\n   */\n  start() {\n    if (this.isRunning) return;\n\n    this.isRunning = true;\n    this.isPaused = false;\n    this.lastUpdateTime = Date.now();\n\n    this.gameLoop();\n    this.eventSystem.emit(EVENTS.GAME_RESUME, { gameState: this.gameState });\n    console.log('Game started');\n  }\n\n  /**\n   * Pause the game\n   */\n  pause() {\n    if (!this.isRunning || this.isPaused) return;\n\n    this.isPaused = true;\n    if (this.gameLoopId) {\n      clearTimeout(this.gameLoopId);\n      this.gameLoopId = null;\n    }\n\n    this.eventSystem.emit(EVENTS.GAME_PAUSE, { gameState: this.gameState });\n    console.log('Game paused');\n  }\n\n  /**\n   * Resume the game\n   */\n  resume() {\n    if (!this.isRunning || !this.isPaused) return;\n\n    this.isPaused = false;\n    this.lastUpdateTime = Date.now();\n    this.gameLoop();\n\n    this.eventSystem.emit(EVENTS.GAME_RESUME, { gameState: this.gameState });\n    console.log('Game resumed');\n  }\n\n  /**\n   * Stop the game\n   */\n  stop() {\n    this.isRunning = false;\n    this.isPaused = false;\n\n    if (this.gameLoopId) {\n      clearTimeout(this.gameLoopId);\n      this.gameLoopId = null;\n    }\n\n    // Auto-save when stopping\n    this.autoSave();\n    console.log('Game stopped');\n  }\n\n  /**\n   * Advance to next turn manually\n   */\n  nextTurn() {\n    if (!this.isRunning) return;\n\n    this.processTurn();\n  }\n\n  /**\n   * Main game loop\n   */\n  gameLoop() {\n    if (!this.isRunning || this.isPaused) return;\n\n    const now = Date.now();\n    const deltaTime = now - this.lastUpdateTime;\n\n    // Update FPS counter\n    this.updateFPS(now);\n\n    // Process turn if enough time has passed\n    if (deltaTime >= this.gameSpeed) {\n      this.processTurn();\n      this.lastUpdateTime = now;\n    }\n\n    // Schedule next frame\n    this.gameLoopId = setTimeout(() => this.gameLoop(), 16); // ~60 FPS\n  }\n\n  /**\n   * Process a single turn\n   */\n  processTurn() {\n    this.eventSystem.emit(EVENTS.TURN_START, {\n      gameState: this.gameState,\n      turn: this.gameState.time.week,\n    });\n\n    // Advance time\n    this.advanceTime();\n\n    // Process queued events\n    this.eventSystem.processQueue();\n\n    // Auto-save periodically\n    if (this.gameState.time.week % 4 === 0) { // Every 4 weeks\n      this.autoSave();\n    }\n\n    this.eventSystem.emit(EVENTS.TURN_END, {\n      gameState: this.gameState,\n      turn: this.gameState.time.week,\n    });\n  }\n\n  /**\n   * Advance game time\n   */\n  advanceTime() {\n    this.gameState.time.week += 1;\n\n    // Handle month/year transitions\n    if (this.gameState.time.week > 52) {\n      this.gameState.time.week = 1;\n      this.gameState.time.year += 1;\n    }\n\n    // Calculate current date\n    const startDate = new Date(this.gameState.time.startDate);\n    const weeksElapsed = (this.gameState.time.year - 1) * 52 + this.gameState.time.week - 1;\n    this.gameState.time.currentDate = new Date(startDate.getTime() + weeksElapsed * 7 * 24 * 60 * 60 * 1000);\n  }\n\n  /**\n   * Save game manually\n   */\n  saveGame(saveName = null) {\n    const success = this.saveSystem.saveGame(this.gameState, saveName);\n    this.eventSystem.emit(EVENTS.GAME_SAVE, {\n      success,\n      gameState: this.gameState,\n      saveName,\n    });\n    return success;\n  }\n\n  /**\n   * Load game\n   */\n  loadGame(saveId) {\n    const loadedState = this.saveSystem.loadGame(saveId);\n    if (loadedState) {\n      this.gameState = loadedState;\n      this.eventSystem.emit(EVENTS.GAME_LOAD, {\n        success: true,\n        gameState: this.gameState,\n      });\n      return true;\n    }\n\n    this.eventSystem.emit(EVENTS.GAME_LOAD, {\n      success: false,\n      saveId,\n    });\n    return false;\n  }\n\n  /**\n   * Auto-save game\n   */\n  autoSave() {\n    return this.saveSystem.autoSave(this.gameState);\n  }\n\n  /**\n   * Update game state\n   */\n  updateGameState(updates) {\n    // Deep merge updates into game state\n    this.gameState = this.mergeDeep(this.gameState, updates);\n\n    this.eventSystem.emit(EVENTS.UI_UPDATE, {\n      gameState: this.gameState,\n      updates,\n    });\n  }\n\n  /**\n   * Get current game state (read-only copy)\n   */\n  getGameState() {\n    return JSON.parse(JSON.stringify(this.gameState));\n  }\n\n  /**\n   * Get game statistics\n   */\n  getGameStats() {\n    return {\n      isRunning: this.isRunning,\n      isPaused: this.isPaused,\n      gameSpeed: this.gameSpeed,\n      fps: this.fps,\n      currentTurn: this.gameState.time.week,\n      currentYear: this.gameState.time.year,\n      playtime: this.calculatePlaytime(),\n      eventSystemStats: this.eventSystem.getStats(),\n      storageStats: this.saveSystem.getStorageStats(),\n    };\n  }\n\n  /**\n   * Set game speed\n   */\n  setGameSpeed(speed) {\n    this.gameSpeed = Math.max(100, Math.min(5000, speed)); // Clamp between 100ms and 5s\n    console.log(`Game speed set to ${this.gameSpeed}ms per turn`);\n  }\n\n  /**\n   * Create initial game state\n   * @private\n   */\n  createInitialGameState() {\n    const now = new Date();\n\n    return {\n      version: '1.0.0',\n      player: {\n        name: 'Player',\n        party: 'Independent',\n        experience: 0,\n        skills: {\n          economics: { level: 1, experience: 0 },\n          diplomacy: { level: 1, experience: 0 },\n          communication: { level: 1, experience: 0 },\n          leadership: { level: 1, experience: 0 },\n        },\n      },\n      country: {\n        name: 'Democracia',\n        population: 50000000,\n        gdp: 1000000000000, // $1 trillion\n        debt: 600000000000, // 60% of GDP\n        stability: 75,\n      },\n      economy: {\n        gdpGrowth: 2.1,\n        unemployment: 6.0,\n        inflation: 2.4,\n        interestRate: 3.5,\n        sectors: {\n          agriculture: 5,\n          manufacturing: 25,\n          services: 70,\n        },\n      },\n      politics: {\n        approval: 50,\n        coalition: [\n          { party: 'Government', support: 45 },\n          { party: 'Coalition Partner', support: 22 },\n        ],\n        opposition: [\n          { party: 'Main Opposition', support: 30 },\n          { party: 'Minor Opposition', support: 3 },\n        ],\n        nextElection: { year: 4, week: 1 },\n        nextVote: null,\n      },\n      global: {\n        relations: {\n          'United Federation': 75,\n          'Eastern Empire': 60,\n          'Southern Union': 80,\n        },\n        tradeBalance: 15000000000, // $15 billion surplus\n        internationalStanding: 'Good',\n      },\n      time: {\n        startDate: now.toISOString(),\n        currentDate: now.toISOString(),\n        week: 1,\n        year: 1,\n      },\n      events: {\n        recent: [],\n        pending: [],\n      },\n      scandals: {\n        active: [],\n        resolved: [],\n      },\n    };\n  }\n\n  /**\n   * Initialize event listeners\n   * @private\n   */\n  initializeEventListeners() {\n    // Listen for UI events that affect game state\n    this.eventSystem.on(EVENTS.POLICY_PROPOSED, (event) => {\n      this.gameState.events.pending.push(event.data);\n    });\n\n    this.eventSystem.on(EVENTS.APPROVAL_CHANGE, (event) => {\n      this.gameState.politics.approval = Math.max(0, Math.min(100, event.data.newApproval));\n    });\n\n    // Listen for economic events\n    this.eventSystem.on('economic:update', (event) => {\n      // Update game state with economic data\n      const economicData = event.data;\n      this.gameState.economy = {\n        ...this.gameState.economy,\n        ...economicData.metrics,\n        sectors: economicData.sectors,\n        cycle: economicData.cycle,\n      };\n    });\n\n    this.eventSystem.on('economic:event', (event) => {\n      // Add economic events to game events\n      this.gameState.events.recent.push({\n        type: 'economic',\n        ...event.data,\n        timestamp: Date.now(),\n      });\n\n      // Keep only last 10 events\n      if (this.gameState.events.recent.length > 10) {\n        this.gameState.events.recent = this.gameState.events.recent.slice(-10);\n      }\n    });\n  }\n\n  /**\n   * Update FPS counter\n   * @private\n   */\n  updateFPS(now) {\n    this.frameCount += 1;\n    if (now - this.lastFrameTime >= 1000) {\n      this.fps = this.frameCount;\n      this.frameCount = 0;\n      this.lastFrameTime = now;\n    }\n  }\n\n  /**\n   * Calculate total playtime\n   * @private\n   */\n  calculatePlaytime() {\n    const start = new Date(this.gameState.time.startDate);\n    const current = new Date(this.gameState.time.currentDate);\n    return Math.floor((current - start) / (1000 * 60 * 60 * 24 * 7)); // weeks\n  }\n\n  /**\n   * Deep merge objects\n   * @private\n   */\n  mergeDeep(target, source) {\n    const result = { ...target };\n\n    Object.keys(source).forEach((key) => {\n      if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n        result[key] = this.mergeDeep(result[key] || {}, source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n\n    return result;\n  }\n}\n\n// Create and export global game engine instance\nexport const gameEngine = new GameEngine();\n"],"names":["EventSystem","constructor","listeners","Map","eventQueue","isProcessing","on","eventType","callback","context","has","set","listener","get","push","off","index","findIndex","splice","length","delete","emit","data","event","type","timestamp","Date","now","forEach","call","error","console","queue","processQueue","shift","clear","getStats","eventTypes","size","totalListeners","Array","from","values","reduce","sum","arr","queuedEvents","EVENTS","exports","GAME_START","GAME_PAUSE","GAME_RESUME","GAME_SAVE","GAME_LOAD","TURN_START","TURN_END","APPROVAL_CHANGE","POLICY_PROPOSED","UI_UPDATE","UI_NOTIFICATION","UI_ERROR","eventSystem","SaveSystem","storageKey","autoSaveKey","maxSaves","compressionEnabled","saveGame","gameState","saveName","saveData","prepareSaveData","saves","getAllSaves","unshift","localStorage","setItem","JSON","stringify","log","name","loadGame","saveId","find","save","id","decompressData","autoSave","loadAutoSave","autoSaveData","getItem","parse","deleteSave","filteredSaves","filter","clearAllSaves","removeItem","exportSave","dataStr","dataBlob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","replace","body","appendChild","click","removeChild","revokeObjectURL","importSave","file","text","validateSaveData","generateSaveId","imported","getStorageStats","savesSize","autoSaveSize","totalSize","saveCount","totalSizeBytes","totalSizeKB","Math","round","hasAutoSave","toLocaleDateString","toLocaleTimeString","toISOString","version","gameTime","time","compressData","random","toString","substr","saveSystem","EconomicSimulation","metrics","gdp","gdpGrowth","unemployment","inflation","interestRate","consumerSpending","governmentSpending","investment","netExports","productivity","confidence","sectors","agriculture","share","growth","volatility","manufacturing","services","cycle","phase","duration","intensity","shocks","policies","setupEventListeners","updateEconomy","applyPolicy","policy","applyShock","shock","updateBusinessCycle","updateSectors","updateGDP","updateUnemployment","updateInflation","updateConfidence","applyActivePolicies","checkEconomicEvents","min","max","Object","keys","sectorName","sector","cycleEffect","getCycleEffect","currentGrowth","weightedGrowth","productivityEffect","confidenceEffect","smoothUpdate","weeklyGrowthRate","targetUnemployment","cycleAdjustment","adjustedTarget","demandPullInflation","costPushInflation","monetaryInflation","targetInflation","confidenceChange","implementedWeek","amount","change","newMetrics","ongoingEffects","metric","undefined","magnitude","events","message","toFixed","severity","charAt","toUpperCase","slice","shockType","generateRandomShock","floor","current","target","speed","getEconomicState","activePolicies","activeShocks","getForecast","weeksAhead","forecast","currentGDP","currentUnemployment","currentInflation","week","Number","economicSimulation","GameEngine","createInitialGameState","isRunning","isPaused","gameSpeed","lastUpdateTime","gameLoopId","frameCount","lastFrameTime","fps","initializeEventListeners","initialize","start","gameLoop","pause","clearTimeout","resume","stop","nextTurn","processTurn","deltaTime","updateFPS","setTimeout","turn","advanceTime","year","startDate","weeksElapsed","currentDate","getTime","success","loadedState","updateGameState","updates","mergeDeep","getGameState","getGameStats","currentTurn","currentYear","playtime","calculatePlaytime","eventSystemStats","storageStats","setGameSpeed","player","party","experience","skills","economics","level","diplomacy","communication","leadership","country","population","debt","stability","economy","politics","approval","coalition","support","opposition","nextElection","nextVote","global","relations","tradeBalance","internationalStanding","recent","pending","scandals","active","resolved","newApproval","economicData","source","result","key","isArray","gameEngine"],"mappings":"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"}