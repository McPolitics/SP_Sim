{"version":3,"file":"main-C9ICOfMw.js","sources":["../../src/ui/components/Navigation.js","../../src/ui/components/Modal.js","../../src/ui/components/DebugPanel.js","../../src/main.js"],"sourcesContent":["import { BaseComponent } from './BaseComponent';\nimport { eventSystem, EVENTS } from '../../core/EventSystem';\n\n/**\n * Navigation - Main navigation component for different game screens\n * Handles screen switching and navigation state\n */\nexport class Navigation extends BaseComponent {\n  constructor() {\n    super();\n    this.currentScreen = 'dashboard';\n    this.screens = {\n      dashboard: 'Dashboard',\n      economy: 'Economy',\n      politics: 'Politics',\n      global: 'Global Relations',\n      policies: 'Policies',\n      crisis: 'Crisis Management',\n      analytics: 'Analytics',\n    };\n\n    this.initializeNavigation();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Initialize navigation elements\n   */\n  initializeNavigation() {\n    // Create navigation if it doesn't exist\n    let navElement = document.querySelector('.navigation');\n    if (!navElement) {\n      navElement = this.createElement('nav', 'navigation');\n      const header = document.querySelector('.header');\n      if (header) {\n        header.appendChild(navElement);\n      }\n    }\n\n    this.element = navElement;\n    this.renderNavigationMenu();\n  }\n\n  /**\n   * Render navigation menu\n   */\n  renderNavigationMenu() {\n    const navList = this.createElement('ul', 'navigation__menu');\n\n    Object.entries(this.screens).forEach(([screenId, screenName]) => {\n      const listItem = this.createElement('li', 'navigation__item');\n      const link = this.createElement('a', 'navigation__link', screenName);\n      link.setAttribute('href', `#${screenId}`);\n      link.setAttribute('data-screen', screenId);\n\n      if (screenId === this.currentScreen) {\n        link.classList.add('navigation__link--active');\n      }\n\n      listItem.appendChild(link);\n      navList.appendChild(listItem);\n    });\n\n    this.element.innerHTML = '';\n    this.element.appendChild(navList);\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Handle navigation clicks\n    this.addEventListener(this.element, 'click', (e) => {\n      e.preventDefault();\n      const link = e.target.closest('.navigation__link');\n      if (link) {\n        const screenId = link.getAttribute('data-screen');\n        this.navigateToScreen(screenId);\n      }\n    });\n\n    // Listen for external navigation events\n    eventSystem.on('navigation:goto', (event) => {\n      this.navigateToScreen(event.data.screen);\n    });\n  }\n\n  /**\n   * Navigate to a specific screen\n   */\n  navigateToScreen(screenId) {\n    if (!this.screens[screenId] || screenId === this.currentScreen) {\n      return;\n    }\n\n    // Update active state\n    const currentActiveLink = this.element.querySelector('.navigation__link--active');\n    if (currentActiveLink) {\n      currentActiveLink.classList.remove('navigation__link--active');\n    }\n\n    const newActiveLink = this.element.querySelector(`[data-screen=\"${screenId}\"]`);\n    if (newActiveLink) {\n      newActiveLink.classList.add('navigation__link--active');\n    }\n\n    // Update current screen\n    const previousScreen = this.currentScreen;\n    this.currentScreen = screenId;\n\n    // Emit navigation event\n    eventSystem.emit(EVENTS.UI_UPDATE, {\n      type: 'navigation',\n      from: previousScreen,\n      to: screenId,\n      screenTitle: this.screens[screenId],\n    });\n\n    // Update browser URL without page reload\n    if (window.history) {\n      window.history.pushState(\n        { screen: screenId },\n        this.screens[screenId],\n        `#${screenId}`,\n      );\n    }\n\n    console.log(`Navigated to ${this.screens[screenId]}`);\n  }\n\n  /**\n   * Get current screen\n   */\n  getCurrentScreen() {\n    return this.currentScreen;\n  }\n\n  /**\n   * Update navigation based on game state\n   */\n  update(gameState) {\n    // Add badge indicators for screens with updates/notifications\n    this.updateScreenBadges(gameState);\n  }\n\n  /**\n   * Update screen badges for notifications\n   */\n  updateScreenBadges(gameState) {\n    // Clear existing badges\n    this.element.querySelectorAll('.navigation__badge').forEach((badge) => {\n      badge.remove();\n    });\n\n    // Add badges based on game state\n    if (gameState.events.pending.length > 0) {\n      this.addScreenBadge('policies', gameState.events.pending.length);\n    }\n\n    if (gameState.scandals.active.length > 0) {\n      this.addScreenBadge('crisis', gameState.scandals.active.length);\n    }\n\n    // Economic alerts\n    if (gameState.economy.gdpGrowth < 0 || gameState.economy.unemployment > 8) {\n      this.addScreenBadge('economy', '!');\n    }\n  }\n\n  /**\n   * Add a badge to a navigation screen\n   */\n  addScreenBadge(screenId, content) {\n    const link = this.element.querySelector(`[data-screen=\"${screenId}\"]`);\n    if (link) {\n      const badge = this.createElement('span', 'navigation__badge', content);\n      link.appendChild(badge);\n    }\n  }\n}\n\nexport default Navigation;\n","import { BaseComponent } from './BaseComponent';\nimport { eventSystem } from '../../core/EventSystem';\n\n/**\n * Modal - Reusable modal dialog component\n * Handles various dialog types like confirmations, forms, and info displays\n */\nexport class Modal extends BaseComponent {\n  constructor(options = {}) {\n    super();\n    this.options = {\n      title: 'Dialog',\n      content: '',\n      type: 'info', // info, confirm, form, custom\n      confirmText: 'OK',\n      cancelText: 'Cancel',\n      showCancel: false,\n      onConfirm: null,\n      onCancel: null,\n      backdrop: true,\n      closeable: true,\n      ...options,\n    };\n\n    this.isOpen = false;\n    this.createModal();\n  }\n\n  /**\n   * Create modal structure\n   */\n  createModal() {\n    // Create modal backdrop\n    this.backdrop = this.createElement('div', 'modal-backdrop');\n    if (!this.options.backdrop) {\n      this.backdrop.style.background = 'transparent';\n      this.backdrop.style.pointerEvents = 'none';\n    }\n\n    // Create modal container\n    this.element = this.createElement('div', 'modal');\n\n    // Create modal content\n    this.modalContent = this.createElement('div', 'modal__content');\n\n    // Create header\n    this.modalHeader = this.createElement('div', 'modal__header');\n    this.modalTitle = this.createElement('h3', 'modal__title', this.options.title);\n    this.modalHeader.appendChild(this.modalTitle);\n\n    // Create close button if closeable\n    if (this.options.closeable) {\n      this.closeButton = this.createElement('button', 'modal__close', '×');\n      this.modalHeader.appendChild(this.closeButton);\n    }\n\n    // Create body\n    this.modalBody = this.createElement('div', 'modal__body');\n    this.setContent(this.options.content);\n\n    // Create footer\n    this.modalFooter = this.createElement('div', 'modal__footer');\n    this.createFooterButtons();\n\n    // Assemble modal\n    this.modalContent.appendChild(this.modalHeader);\n    this.modalContent.appendChild(this.modalBody);\n    this.modalContent.appendChild(this.modalFooter);\n    this.element.appendChild(this.modalContent);\n    this.backdrop.appendChild(this.element);\n\n    this.setupEventListeners();\n    this.hide(); // Start hidden\n  }\n\n  /**\n   * Create footer buttons based on modal type\n   */\n  createFooterButtons() {\n    this.modalFooter.innerHTML = '';\n\n    if (this.options.showCancel || this.options.type === 'confirm') {\n      this.cancelButton = this.createElement('button', 'btn btn--secondary', this.options.cancelText);\n      this.modalFooter.appendChild(this.cancelButton);\n    }\n\n    this.confirmButton = this.createElement('button', 'btn btn--primary', this.options.confirmText);\n    this.modalFooter.appendChild(this.confirmButton);\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Close button\n    if (this.closeButton) {\n      this.addEventListener(this.closeButton, 'click', () => {\n        this.close();\n      });\n    }\n\n    // Cancel button\n    if (this.cancelButton) {\n      this.addEventListener(this.cancelButton, 'click', () => {\n        this.cancel();\n      });\n    }\n\n    // Confirm button\n    if (this.confirmButton) {\n      this.addEventListener(this.confirmButton, 'click', () => {\n        this.confirm();\n      });\n    }\n\n    // Backdrop click\n    if (this.options.backdrop && this.options.closeable) {\n      this.addEventListener(this.backdrop, 'click', (e) => {\n        if (e.target === this.backdrop) {\n          this.close();\n        }\n      });\n    }\n\n    // Escape key\n    this.addEventListener(document, 'keydown', (e) => {\n      if (e.key === 'Escape' && this.isOpen && this.options.closeable) {\n        this.close();\n      }\n    });\n  }\n\n  /**\n   * Set modal content\n   */\n  setContent(content) {\n    if (typeof content === 'string') {\n      this.modalBody.innerHTML = content;\n    } else if (content instanceof HTMLElement) {\n      this.modalBody.innerHTML = '';\n      this.modalBody.appendChild(content);\n    }\n  }\n\n  /**\n   * Set modal title\n   */\n  setTitle(title) {\n    this.options.title = title;\n    this.modalTitle.textContent = title;\n  }\n\n  /**\n   * Show the modal\n   */\n  show() {\n    if (this.isOpen) return;\n\n    // Add to DOM\n    document.body.appendChild(this.backdrop);\n\n    // Trigger show animation\n    requestAnimationFrame(() => {\n      this.backdrop.classList.add('modal-backdrop--visible');\n      this.element.classList.add('modal--visible');\n    });\n\n    this.isOpen = true;\n\n    // Focus first input if it's a form modal\n    if (this.options.type === 'form') {\n      const firstInput = this.modalBody.querySelector('input, textarea, select');\n      if (firstInput) {\n        firstInput.focus();\n      }\n    }\n\n    // Emit event\n    eventSystem.emit('modal:show', { modal: this });\n  }\n\n  /**\n   * Hide the modal\n   */\n  hide() {\n    if (!this.isOpen) return;\n\n    this.backdrop.classList.remove('modal-backdrop--visible');\n    this.element.classList.remove('modal--visible');\n\n    // Remove from DOM after animation\n    setTimeout(() => {\n      if (this.backdrop.parentNode) {\n        document.body.removeChild(this.backdrop);\n      }\n    }, 300);\n\n    this.isOpen = false;\n\n    // Emit event\n    eventSystem.emit('modal:hide', { modal: this });\n  }\n\n  /**\n   * Close modal (same as hide but can be overridden)\n   */\n  close() {\n    this.hide();\n  }\n\n  /**\n   * Handle confirm action\n   */\n  confirm() {\n    let result = true;\n\n    // If it's a form modal, collect form data\n    if (this.options.type === 'form') {\n      const formData = this.collectFormData();\n      if (this.options.onConfirm) {\n        result = this.options.onConfirm(formData);\n      }\n    } else if (this.options.onConfirm) {\n      result = this.options.onConfirm();\n    }\n\n    // Close modal if callback returns true or undefined\n    if (result !== false) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Handle cancel action\n   */\n  cancel() {\n    if (this.options.onCancel) {\n      this.options.onCancel();\n    }\n    this.hide();\n  }\n\n  /**\n   * Collect form data from modal body\n   */\n  collectFormData() {\n    const formData = {};\n    const inputs = this.modalBody.querySelectorAll('input, textarea, select');\n\n    inputs.forEach((input) => {\n      const name = input.name || input.id;\n      if (name) {\n        if (input.type === 'checkbox') {\n          formData[name] = input.checked;\n        } else if (input.type === 'radio') {\n          if (input.checked) {\n            formData[name] = input.value;\n          }\n        } else {\n          formData[name] = input.value;\n        }\n      }\n    });\n\n    return formData;\n  }\n\n  /**\n   * Static method to create quick confirmation dialog\n   */\n  static confirm(title, message, onConfirm, onCancel) {\n    return new Modal({\n      title,\n      content: `<p>${message}</p>`,\n      type: 'confirm',\n      confirmText: 'Yes',\n      cancelText: 'No',\n      showCancel: true,\n      onConfirm,\n      onCancel,\n    }).show();\n  }\n\n  /**\n   * Static method to create quick alert dialog\n   */\n  static alert(title, message, onConfirm) {\n    return new Modal({\n      title,\n      content: `<p>${message}</p>`,\n      type: 'info',\n      confirmText: 'OK',\n      onConfirm,\n    }).show();\n  }\n\n  /**\n   * Static method to create quick prompt dialog\n   */\n  static prompt(title, message, onConfirm, defaultValue = '') {\n    const content = `\n      <p>${message}</p>\n      <input type=\"text\" name=\"value\" value=\"${defaultValue}\" class=\"form-input\" style=\"width: 100%; margin-top: 10px;\">\n    `;\n\n    return new Modal({\n      title,\n      content,\n      type: 'form',\n      confirmText: 'OK',\n      cancelText: 'Cancel',\n      showCancel: true,\n      onConfirm: (formData) => {\n        if (onConfirm) {\n          onConfirm(formData.value);\n        }\n        return true;\n      },\n    }).show();\n  }\n\n  /**\n   * Destroy modal and clean up\n   */\n  destroy() {\n    this.hide();\n    this.removeAllEventListeners();\n  }\n}\n\nexport default Modal;\n","import { BaseComponent } from './BaseComponent';\nimport { eventSystem } from '../../core/EventSystem';\nimport { economicSimulation } from '../../core/EconomicSimulation';\nimport { gameEngine } from '../../core/GameEngine';\n\n/**\n * DebugPanel - Development testing features\n * Only shown when debug mode is enabled\n */\nexport class DebugPanel extends BaseComponent {\n  constructor() {\n    super();\n\n    // Only initialize if debug mode is enabled\n    // eslint-disable-next-line no-undef\n    if (typeof __ENABLE_DEBUG__ !== 'undefined' && __ENABLE_DEBUG__) {\n      this.initializeDebugPanel();\n      this.setupEventListeners();\n    }\n  }\n\n  /**\n   * Initialize the debug panel\n   */\n  initializeDebugPanel() {\n    // Create debug panel container\n    const debugPanel = this.createElement('div', 'debug-panel');\n    debugPanel.innerHTML = `\n      <div class=\"debug-header\">\n        <h3>🔧 Debug Panel</h3>\n        <button class=\"btn btn--small debug-toggle\" id=\"debug-toggle\">Hide</button>\n      </div>\n      \n      <div class=\"debug-content\">\n        <div class=\"debug-section\">\n          <h4>Game State</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-advance-time\">+10 Weeks</button>\n            <button class=\"btn btn--small\" id=\"debug-reset-game\">Reset Game</button>\n            <button class=\"btn btn--small\" id=\"debug-save-state\">Save State</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>Week: <span id=\"debug-week\">--</span></div>\n            <div>Year: <span id=\"debug-year\">--</span></div>\n            <div>Approval: <span id=\"debug-approval\">--</span>%</div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Economic Testing</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-trigger-boom\">Trigger Boom</button>\n            <button class=\"btn btn--small\" id=\"debug-trigger-recession\">Trigger Recession</button>\n            <button class=\"btn btn--small\" id=\"debug-random-shock\">Random Shock</button>\n            <button class=\"btn btn--small\" id=\"debug-reset-economy\">Reset Economy</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>GDP Growth: <span id=\"debug-gdp\">--</span>%</div>\n            <div>Unemployment: <span id=\"debug-unemployment\">--</span>%</div>\n            <div>Cycle: <span id=\"debug-cycle\">--</span></div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Policy Testing</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-all-policies\">Apply All Policies</button>\n            <button class=\"btn btn--small\" id=\"debug-clear-policies\">Clear Policies</button>\n            <button class=\"btn btn--small\" id=\"debug-max-stimulus\">Max Stimulus</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>Active Policies: <span id=\"debug-policies\">--</span></div>\n            <div>Confidence: <span id=\"debug-confidence\">--</span></div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Events & Shocks</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-financial-crisis\">Financial Crisis</button>\n            <button class=\"btn btn--small\" id=\"debug-tech-boom\">Tech Innovation</button>\n            <button class=\"btn btn--small\" id=\"debug-natural-disaster\">Natural Disaster</button>\n            <button class=\"btn btn--small\" id=\"debug-clear-shocks\">Clear Shocks</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>Active Shocks: <span id=\"debug-shocks\">--</span></div>\n            <div>Recent Events: <span id=\"debug-events\">--</span></div>\n          </div>\n        </div>\n\n        <div class=\"debug-section\">\n          <h4>Performance</h4>\n          <div class=\"debug-controls\">\n            <button class=\"btn btn--small\" id=\"debug-performance\">Log Performance</button>\n            <button class=\"btn btn--small\" id=\"debug-memory\">Memory Usage</button>\n          </div>\n          <div class=\"debug-info\">\n            <div>FPS: <span id=\"debug-fps\">--</span></div>\n            <div>Memory: <span id=\"debug-memory-usage\">--</span>MB</div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // Add styles\n    const style = document.createElement('style');\n    style.textContent = `\n      .debug-panel {\n        position: fixed;\n        top: 80px;\n        right: 20px;\n        width: 300px;\n        background: rgba(0, 0, 0, 0.9);\n        color: #00ff00;\n        border-radius: 8px;\n        padding: 16px;\n        font-family: 'Courier New', monospace;\n        font-size: 12px;\n        z-index: 10000;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);\n        max-height: 80vh;\n        overflow-y: auto;\n      }\n      \n      .debug-panel.hidden {\n        display: none;\n      }\n      \n      .debug-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 16px;\n        border-bottom: 1px solid #333;\n        padding-bottom: 8px;\n      }\n      \n      .debug-header h3 {\n        margin: 0;\n        color: #00ff00;\n        font-size: 14px;\n      }\n      \n      .debug-section {\n        margin-bottom: 16px;\n        border-bottom: 1px solid #333;\n        padding-bottom: 12px;\n      }\n      \n      .debug-section h4 {\n        margin: 0 0 8px 0;\n        color: #ffff00;\n        font-size: 12px;\n      }\n      \n      .debug-controls {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 4px;\n        margin-bottom: 8px;\n      }\n      \n      .debug-controls .btn {\n        font-size: 10px;\n        padding: 4px 8px;\n        background: #333;\n        color: #fff;\n        border: 1px solid #555;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n      \n      .debug-controls .btn:hover {\n        background: #555;\n      }\n      \n      .debug-info {\n        font-size: 10px;\n        line-height: 1.4;\n      }\n      \n      .debug-info div {\n        margin-bottom: 2px;\n      }\n      \n      .debug-toggle {\n        background: #666 !important;\n        color: #fff !important;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(debugPanel);\n    this.element = debugPanel;\n\n    this.setupDebugControls();\n  }\n\n  /**\n   * Setup debug control handlers\n   */\n  setupDebugControls() {\n    // Toggle visibility\n    const toggleBtn = document.getElementById('debug-toggle');\n    if (toggleBtn) {\n      this.addEventListener(toggleBtn, 'click', () => {\n        this.element.classList.toggle('hidden');\n        toggleBtn.textContent = this.element.classList.contains('hidden') ? 'Show' : 'Hide';\n      });\n    }\n\n    // Game state controls\n    this.addEventListener(document.getElementById('debug-advance-time'), 'click', () => {\n      for (let i = 0; i < 10; i += 1) {\n        gameEngine.nextTurn();\n      }\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-reset-game'), 'click', () => {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm('Reset game to initial state?')) {\n        gameEngine.gameState = gameEngine.createInitialGameState();\n        this.updateDebugInfo();\n      }\n    });\n\n    // Economic controls\n    this.addEventListener(document.getElementById('debug-trigger-boom'), 'click', () => {\n      economicSimulation.cycle.phase = 'expansion';\n      economicSimulation.metrics.gdpGrowth = 5.0;\n      economicSimulation.metrics.unemployment = 3.5;\n      economicSimulation.metrics.confidence = 90;\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-trigger-recession'), 'click', () => {\n      economicSimulation.cycle.phase = 'recession';\n      economicSimulation.metrics.gdpGrowth = -2.0;\n      economicSimulation.metrics.unemployment = 9.0;\n      economicSimulation.metrics.confidence = 25;\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-random-shock'), 'click', () => {\n      const shock = economicSimulation.generateRandomShock();\n      economicSimulation.applyShock(shock);\n      this.updateDebugInfo();\n    });\n\n    // Policy controls\n    this.addEventListener(document.getElementById('debug-all-policies'), 'click', () => {\n      const policies = [\n        {\n          type: 'fiscal_stimulus', name: 'Debug Stimulus', amount: 0.03, duration: 12,\n        },\n        {\n          type: 'education_investment', name: 'Debug Education', amount: 0.04, duration: 24,\n        },\n        {\n          type: 'infrastructure_investment', name: 'Debug Infrastructure', amount: 0.06, duration: 36,\n        },\n      ];\n\n      policies.forEach((policy) => economicSimulation.applyPolicy(policy));\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-clear-policies'), 'click', () => {\n      economicSimulation.policies = [];\n      this.updateDebugInfo();\n    });\n\n    // Shock controls\n    this.addEventListener(document.getElementById('debug-financial-crisis'), 'click', () => {\n      economicSimulation.applyShock({\n        type: 'financial_crisis',\n        magnitude: 2.0,\n        message: 'Debug Financial Crisis',\n        severity: 'danger',\n      });\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-tech-boom'), 'click', () => {\n      economicSimulation.applyShock({\n        type: 'tech_innovation',\n        magnitude: 1.5,\n        message: 'Debug Tech Innovation',\n        severity: 'success',\n      });\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-natural-disaster'), 'click', () => {\n      economicSimulation.applyShock({\n        type: 'natural_disaster',\n        magnitude: 1.2,\n        message: 'Debug Natural Disaster',\n        severity: 'danger',\n      });\n      this.updateDebugInfo();\n    });\n\n    this.addEventListener(document.getElementById('debug-clear-shocks'), 'click', () => {\n      economicSimulation.shocks = [];\n      this.updateDebugInfo();\n    });\n\n    // Performance controls\n    this.addEventListener(document.getElementById('debug-performance'), 'click', () => {\n      console.log('Performance Info:', {\n        gameState: gameEngine.getGameState(),\n        economicState: economicSimulation.getEconomicState(),\n        fps: gameEngine.fps,\n        memory: performance.memory ? `${Math.round(performance.memory.usedJSHeapSize / 1024 / 1024)}MB` : 'N/A',\n      });\n    });\n\n    this.addEventListener(document.getElementById('debug-memory'), 'click', () => {\n      if (performance.memory) {\n        console.log('Memory Usage:', {\n          used: `${Math.round(performance.memory.usedJSHeapSize / 1024 / 1024)}MB`,\n          total: `${Math.round(performance.memory.totalJSHeapSize / 1024 / 1024)}MB`,\n          limit: `${Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024)}MB`,\n        });\n      }\n    });\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    eventSystem.on('economic:update', () => {\n      this.updateDebugInfo();\n    });\n\n    // Update debug info every 5 seconds\n    setInterval(() => {\n      this.updateDebugInfo();\n    }, 5000);\n  }\n\n  /**\n   * Update debug information display\n   */\n  updateDebugInfo() {\n    if (!this.element) return;\n\n    const gameState = gameEngine.getGameState();\n    const economicState = economicSimulation.getEconomicState();\n\n    // Game state\n    this.updateElement('debug-week', gameState.time.week);\n    this.updateElement('debug-year', gameState.time.year);\n    this.updateElement('debug-approval', gameState.politics.approval);\n\n    // Economic state\n    this.updateElement('debug-gdp', economicState.metrics.gdpGrowth.toFixed(1));\n    this.updateElement('debug-unemployment', economicState.metrics.unemployment.toFixed(1));\n    this.updateElement('debug-cycle', economicState.cycle.phase);\n    this.updateElement('debug-confidence', economicState.metrics.confidence.toFixed(0));\n\n    // Policies and shocks\n    this.updateElement('debug-policies', economicState.activePolicies);\n    this.updateElement('debug-shocks', economicState.activeShocks);\n\n    // Performance\n    this.updateElement('debug-fps', gameEngine.fps || 0);\n    if (performance.memory) {\n      this.updateElement('debug-memory-usage', Math.round(performance.memory.usedJSHeapSize / 1024 / 1024));\n    }\n  }\n\n  /**\n   * Update element text content safely\n   */\n  updateElement(id, content) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.textContent = content;\n    }\n  }\n}\n\nexport default DebugPanel;\n","/**\n * SP_Sim - Main Application Entry Point\n * Initializes the game engine and UI components\n */\n\nimport { gameEngine } from './core/GameEngine';\nimport { eventSystem, EVENTS } from './core/EventSystem';\nimport { Dashboard } from './ui/components/Dashboard';\nimport { Navigation } from './ui/components/Navigation';\nimport { Modal } from './ui/components/Modal';\nimport { EconomicsScreen } from './ui/components/EconomicsScreen';\nimport { DebugPanel } from './ui/components/DebugPanel';\n\n/**\n * Main application class\n */\nclass SPSimApp {\n  constructor() {\n    this.gameEngine = gameEngine;\n    this.eventSystem = eventSystem;\n    this.dashboard = null;\n    this.navigation = null;\n    this.economicsScreen = null;\n    this.debugPanel = null;\n    this.currentScreen = 'dashboard';\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize the application\n   */\n  async initialize() {\n    try {\n      console.log('🎮 Starting SP_Sim - Political Economy Simulation');\n\n      // Initialize game engine\n      this.gameEngine.initialize();\n\n      // Initialize UI components\n      this.initializeUI();\n\n      // Setup global event listeners\n      this.setupEventListeners();\n\n      // Setup error handling\n      this.setupErrorHandling();\n\n      // Start the game\n      this.gameEngine.start();\n\n      this.isInitialized = true;\n      console.log('✅ SP_Sim initialized successfully');\n\n      // Initial UI update\n      this.updateUI();\n    } catch (error) {\n      console.error('❌ Failed to initialize SP_Sim:', error);\n      this.showError('Failed to initialize game. Please refresh the page.');\n    }\n  }\n\n  /**\n   * Initialize UI components\n   */\n  initializeUI() {\n    // Initialize navigation\n    this.navigation = new Navigation();\n\n    // Initialize dashboard\n    this.dashboard = new Dashboard();\n\n    // Initialize economics screen\n    this.economicsScreen = new EconomicsScreen();\n\n    // Initialize debug panel (only in debug mode)\n    // eslint-disable-next-line no-undef\n    if (typeof __ENABLE_DEBUG__ !== 'undefined' && __ENABLE_DEBUG__) {\n      this.debugPanel = new DebugPanel();\n      console.log('🔧 Debug panel enabled');\n    }\n\n    // Setup screen management\n    this.setupScreenManagement();\n\n    console.log('✅ UI components initialized');\n  }\n\n  /**\n   * Setup screen management\n   */\n  setupScreenManagement() {\n    // Listen for navigation events\n    this.eventSystem.on(EVENTS.UI_UPDATE, (event) => {\n      if (event.data.type === 'navigation') {\n        this.switchToScreen(event.data.to);\n      }\n    });\n\n    // Setup URL-based routing\n    window.addEventListener('popstate', (event) => {\n      const screen = event.state?.screen || 'dashboard';\n      this.switchToScreen(screen, false);\n    });\n\n    // Handle initial URL\n    const hash = window.location.hash.replace('#', '');\n    if (hash && this.navigation.screens[hash]) {\n      this.switchToScreen(hash, false);\n    }\n  }\n\n  /**\n   * Switch to a different screen\n   */\n  switchToScreen(screenId, _updateHistory = true) {\n    if (this.currentScreen === screenId) return;\n\n    // Hide all screens first\n    document.querySelectorAll('.screen').forEach((screen) => {\n      screen.classList.remove('screen--active');\n    });\n\n    // Show target screen\n    const targetScreen = document.querySelector(`#screen-${screenId}`);\n    if (targetScreen) {\n      targetScreen.classList.add('screen--active');\n\n      // Initialize specific screens\n      if (screenId === 'economy' && this.economicsScreen) {\n        this.economicsScreen.show();\n      }\n    } else {\n      // Create screen placeholder if it doesn't exist\n      this.createScreenPlaceholder(screenId);\n    }\n\n    this.currentScreen = screenId;\n\n    // Update navigation state\n    if (this.navigation) {\n      this.navigation.currentScreen = screenId;\n    }\n\n    console.log(`Switched to screen: ${screenId}`);\n  }\n\n  /**\n   * Create a placeholder screen for future implementation\n   */\n  createScreenPlaceholder(screenId) {\n    const screenName = this.navigation?.screens[screenId] || screenId;\n    const placeholder = document.createElement('div');\n    placeholder.id = `screen-${screenId}`;\n    placeholder.className = 'screen screen--active';\n    placeholder.innerHTML = `\n      <div class=\"panel\">\n        <h2 class=\"panel__title\">${screenName}</h2>\n        <div class=\"panel__content\">\n          <p>This screen is under development and will be available in a future update.</p>\n          <p>Screen: <strong>${screenName}</strong></p>\n        </div>\n      </div>\n    `;\n\n    const mainContent = document.querySelector('.main-content');\n    if (mainContent) {\n      mainContent.appendChild(placeholder);\n    }\n  }\n\n  /**\n   * Setup global event listeners\n   */\n  setupEventListeners() {\n    // Game state events\n    this.eventSystem.on(EVENTS.GAME_START, () => {\n      this.updateUI();\n    });\n\n    this.eventSystem.on(EVENTS.TURN_END, () => {\n      this.updateUI();\n    });\n\n    // Game control events\n    this.eventSystem.on('game:pause_toggle', () => {\n      this.handlePauseToggle();\n    });\n\n    this.eventSystem.on(EVENTS.GAME_SAVE, (event) => {\n      this.handleSaveGame(event.data.saveName);\n    });\n\n    // UI events\n    this.eventSystem.on('ui:load_game_dialog', () => {\n      this.showLoadGameDialog();\n    });\n\n    this.eventSystem.on('ui:decision_dialog', (event) => {\n      this.showDecisionDialog(event.data.decision);\n    });\n\n    // Error handling\n    this.eventSystem.on(EVENTS.UI_ERROR, (event) => {\n      this.showError(event.data.message);\n    });\n\n    // Notification handling\n    this.eventSystem.on(EVENTS.UI_NOTIFICATION, (event) => {\n      this.showNotification(event.data.message, event.data.type);\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', (event) => {\n      this.handleKeyboard(event);\n    });\n\n    // Window events\n    window.addEventListener('beforeunload', () => {\n      this.gameEngine.autoSave();\n    });\n\n    window.addEventListener('focus', () => {\n      if (this.isInitialized && this.gameEngine.isPaused) {\n        // Game was paused, could resume here if desired\n      }\n    });\n\n    window.addEventListener('blur', () => {\n      if (this.isInitialized && this.gameEngine.isRunning) {\n        // Auto-pause when window loses focus (optional)\n        // this.gameEngine.pause();\n      }\n    });\n  }\n\n  /**\n   * Setup error handling\n   */\n  setupErrorHandling() {\n    window.addEventListener('error', (event) => {\n      console.error('Unhandled error:', event.error);\n      this.showError('An unexpected error occurred. The game has been auto-saved.');\n      this.gameEngine.autoSave();\n    });\n\n    window.addEventListener('unhandledrejection', (event) => {\n      console.error('Unhandled promise rejection:', event.reason);\n      this.showError('An unexpected error occurred. The game has been auto-saved.');\n      this.gameEngine.autoSave();\n    });\n  }\n\n  /**\n   * Handle keyboard shortcuts\n   */\n  handleKeyboard(event) {\n    // Don't handle shortcuts if user is typing in an input\n    if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\n      return;\n    }\n\n    switch (event.key) {\n      case ' ': // Spacebar - pause/resume\n        event.preventDefault();\n        this.handlePauseToggle();\n        break;\n      case 'n': // N - next turn\n        event.preventDefault();\n        if (this.gameEngine.isPaused) {\n          this.gameEngine.nextTurn();\n        }\n        break;\n      case 's': // S - save (with Ctrl)\n        if (event.ctrlKey || event.metaKey) {\n          event.preventDefault();\n          this.handleSaveGame();\n        }\n        break;\n      case 'l': // L - load (with Ctrl)\n        if (event.ctrlKey || event.metaKey) {\n          event.preventDefault();\n          this.showLoadGameDialog();\n        }\n        break;\n      default:\n        // No action for other keys\n        break;\n    }\n  }\n\n  /**\n   * Update UI with current game state\n   */\n  updateUI() {\n    const gameState = this.gameEngine.getGameState();\n\n    if (this.dashboard) {\n      this.dashboard.update(gameState);\n    }\n\n    // Update page title with current game info\n    const title = `SP_Sim - Week ${gameState.time.week}, Year ${gameState.time.year}`;\n    const approval = `(${gameState.politics.approval}% approval)`;\n    document.title = `${title} ${approval}`;\n  }\n\n  /**\n   * Handle pause/resume toggle\n   */\n  handlePauseToggle() {\n    if (this.gameEngine.isPaused) {\n      this.gameEngine.resume();\n      this.updatePauseButton('Pause');\n    } else {\n      this.gameEngine.pause();\n      this.updatePauseButton('Resume');\n    }\n  }\n\n  /**\n   * Update pause button text\n   */\n  updatePauseButton(text) {\n    const pauseBtn = document.getElementById('pause-btn');\n    if (pauseBtn) {\n      pauseBtn.textContent = text;\n    }\n  }\n\n  /**\n   * Handle save game\n   */\n  handleSaveGame(requestedSaveName = null) {\n    let saveName = requestedSaveName;\n    if (!saveName) {\n      saveName = window.prompt('Enter a name for your save:'); // eslint-disable-line no-alert\n      if (saveName === null) return; // User cancelled\n    }\n\n    const success = this.gameEngine.saveGame(saveName);\n    if (success) {\n      this.showNotification('Game saved successfully!', 'success');\n    } else {\n      this.showError('Failed to save game.');\n    }\n  }\n\n  /**\n   * Show load game dialog\n   */\n  showLoadGameDialog() {\n    const saves = this.gameEngine.saveSystem.getAllSaves();\n\n    if (saves.length === 0) {\n      Modal.alert('No Saves Found', 'No saved games were found.', () => {\n        this.showNotification('No saved games found.', 'info');\n      });\n      return;\n    }\n\n    // Create save list HTML\n    let saveListHtml = '<div class=\"save-list\">';\n    saves.forEach((save, _index) => {\n      const date = new Date(save.timestamp).toLocaleString();\n      saveListHtml += `\n        <div class=\"save-item\" data-save-id=\"${save.id}\">\n          <div class=\"save-name\">${save.name}</div>\n          <div class=\"save-date\">${date}</div>\n        </div>\n      `;\n    });\n    saveListHtml += '</div>';\n\n    const modal = new Modal({\n      title: 'Load Game',\n      content: `\n        <p>Select a save to load:</p>\n        ${saveListHtml}\n        <style>\n          .save-list { max-height: 300px; overflow-y: auto; }\n          .save-item { \n            padding: 10px; \n            border: 1px solid var(--border-color); \n            margin-bottom: 5px; \n            cursor: pointer; \n            border-radius: 4px;\n            transition: background-color 0.2s;\n          }\n          .save-item:hover { background-color: var(--background-color); }\n          .save-item.selected { background-color: var(--secondary-color); color: white; }\n          .save-name { font-weight: bold; }\n          .save-date { font-size: 0.9em; color: var(--text-light); }\n        </style>\n      `,\n      confirmText: 'Load',\n      cancelText: 'Cancel',\n      showCancel: true,\n      onConfirm: () => {\n        const selected = document.querySelector('.save-item.selected');\n        if (!selected) {\n          this.showNotification('Please select a save to load.', 'warning');\n          return false;\n        }\n\n        const saveId = selected.getAttribute('data-save-id');\n        const success = this.gameEngine.loadGame(saveId);\n        if (success) {\n          this.showNotification('Game loaded successfully!', 'success');\n          this.updateUI();\n        } else {\n          this.showError('Failed to load game.');\n        }\n        return true;\n      },\n    });\n\n    // Add click handlers for save items\n    modal.show();\n    setTimeout(() => {\n      const saveItems = document.querySelectorAll('.save-item');\n      saveItems.forEach((item) => {\n        item.addEventListener('click', () => {\n          saveItems.forEach((i) => i.classList.remove('selected'));\n          item.classList.add('selected');\n        });\n      });\n    }, 100);\n  }\n\n  /**\n   * Show decision dialog\n   */\n  showDecisionDialog(decision) {\n    const modal = new Modal({\n      title: 'Political Decision',\n      content: `\n        <div class=\"decision-content\">\n          <p><strong>Decision:</strong> ${decision.description || decision}</p>\n          <div class=\"decision-options\">\n            <p>How would you like to respond?</p>\n          </div>\n        </div>\n      `,\n      confirmText: 'Approve',\n      cancelText: 'Reject',\n      showCancel: true,\n      onConfirm: () => {\n        this.eventSystem.emit('decision:response', {\n          decision,\n          response: 'approve',\n        });\n        this.showNotification('Decision approved.', 'success');\n        return true;\n      },\n      onCancel: () => {\n        this.eventSystem.emit('decision:response', {\n          decision,\n          response: 'reject',\n        });\n        this.showNotification('Decision rejected.', 'info');\n      },\n    });\n\n    modal.show();\n  }\n\n  /**\n   * Show error message\n   */\n  showError(message) {\n    console.error(message); // eslint-disable-line no-console\n    // Simple alert for now - in production you'd use a proper notification system\n    window.alert(`Error: ${message}`); // eslint-disable-line no-alert\n  }\n\n  /**\n   * Show notification\n   */\n  showNotification(message, type = 'info') {\n    console.log(`${type.toUpperCase()}: ${message}`);\n\n    // Create a simple notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification--${type}`;\n    notification.textContent = message;\n    let backgroundColor;\n    if (type === 'error') {\n      backgroundColor = '#e74c3c';\n    } else if (type === 'success') {\n      backgroundColor = '#27ae60';\n    } else {\n      backgroundColor = '#3498db';\n    }\n\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 16px;\n      background: ${backgroundColor};\n      color: white;\n      border-radius: 4px;\n      z-index: 10000;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n    `;\n\n    document.body.appendChild(notification);\n\n    // Remove notification after 3 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.parentNode.removeChild(notification);\n      }\n    }, 3000);\n  }\n}\n\n// Initialize the application when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new SPSimApp();\n  app.initialize();\n\n  // Make app available globally for debugging\n  window.spSimApp = app;\n});\n\n// Export for potential module usage\nexport default SPSimApp;\n"],"names":[],"mappings":"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"}